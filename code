<!DOCTYPE html>
<html lang="bn">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Banglar Shahzada ফিশিং গার্ড v2</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Bengali:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">


    <!-- Application Structure Plan: Multi-screen sequential workflow.
        1. Screen 1 (Landing/Selection).
        2. Screen 2 (Input). Optional "AI Summary".
        3. Screen 3 (Results). PDF generation. Custom modal. Typing effect. NEW: AI Threat Intel for URLs, AI Email Deconstruction.
    -->
    <!-- Visualization & Content Choices:
        - PDF Report (Screen 3): Includes new AI feature outputs.
        - URL Analysis: Placeholder for screenshot preview.
        - File Analysis: Placeholder for file type icon.
    -->
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&family=Roboto+Mono:wght@300;400;500&family=Noto+Sans+Bengali:wght@300;400;500;600;700&display=swap');
        
        :root {
            --bg-dark-primary: #0a0a0a;
            --bg-dark-secondary: #1a1a1a;
            --bg-dark-tertiary: #2a2a2a;
            --text-cyber-green: #00ff00;
            --text-cyber-green-dim: #00cc00;
            --text-gray-light: #cccccc;
            --text-gray-medium: #999999;
            --accent-cyan: #00ffff;
            --accent-magenta: #ff00ff;
            --border-cyber: #008000;
            --error-red: #ff3333;
            --success-green: #33ff33;
            --warning-yellow: #ffff33;
        }

        body {
            font-family: 'Noto Sans Bengali', 'Roboto Mono', monospace;
            background-color: var(--bg-dark-primary);
            color: var(--text-gray-light);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 1rem;
            overflow-x: hidden;
        }
        .app-container {
            width: 100%;
            max-width: 950px;
            background-color: rgba(10, 10, 10, 0.85); 
            border: 1px solid var(--border-cyber);
            border-radius: 1rem; 
            padding: 2rem;
            box-shadow: 0 0 50px rgba(0, 255, 0, 0.2), 0 0 25px rgba(0, 255, 255, 0.1);
            backdrop-filter: blur(15px);
        }
        .screen { display: none; }
        .screen.active { display: flex; flex-direction: column; animation: matrixEntry 0.8s ease-out; }
        
        @keyframes matrixEntry {
            0% { opacity: 0; transform: translateY(30px) scale(0.95); filter: blur(5px); }
            100% { opacity: 1; transform: translateY(0) scale(1); filter: blur(0px); }
        }

        .app-header h1 {
            font-family: 'Orbitron', 'Noto Sans Bengali', sans-serif;
            font-size: 2.5rem; 
            color: var(--text-cyber-green);
            text-shadow: 0 0 10px var(--text-cyber-green), 0 0 20px var(--text-cyber-green);
            letter-spacing: 1px;
        }
        .app-header p { color: var(--text-gray-medium); font-size: 1rem; }

        .selection-card {
            background-color: var(--bg-dark-secondary);
            border: 1px solid var(--border-cyber);
            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            cursor: pointer;
            padding: 2rem;
            border-radius: 0.5rem;
        }
        .selection-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 0 25px rgba(0, 255, 0, 0.3), 0 0 15px var(--accent-cyan);
            border-color: var(--text-cyber-green);
        }
        .selection-card-icon {
            font-size: 3rem; margin-bottom: 0.75rem;
            color: var(--text-cyber-green-dim);
            transition: color 0.3s, text-shadow 0.3s;
        }
        .selection-card:hover .selection-card-icon { color: var(--text-cyber-green); text-shadow: 0 0 8px var(--text-cyber-green); }
        .selection-card h3 { font-family: 'Orbitron', sans-serif; color: var(--text-gray-light); }
        .selection-card p { color: var(--text-gray-medium); font-size: 0.85rem; }

        .input-panel-title { font-family: 'Orbitron', sans-serif; color: var(--accent-cyan); text-align: center; margin-bottom: 1.5rem; font-size: 1.75rem; }
        .input-label { color: var(--text-cyber-green-dim); font-size: 1rem; margin-bottom: 0.5rem; display: block; }
        
        .input-field, .input-textarea {
            background-color: var(--bg-dark-tertiary);
            border: 1px solid var(--border-cyber);
            color: var(--text-cyber-green); 
            padding: 0.75rem;
            border-radius: 0.25rem;
            width: 100%;
            font-family: 'Noto Sans Bengali', 'Roboto Mono', monospace;
            box-shadow: inset 0 0 8px rgba(0, 255, 0, 0.1);
        }
        .input-field:focus, .input-textarea:focus {
            border-color: var(--text-cyber-green);
            box-shadow: 0 0 15px rgba(0, 255, 0, 0.3), inset 0 0 10px rgba(0, 255, 0, 0.2);
            outline: none;
        }
        .input-textarea { min-height: 150px; resize: vertical; }

        .styled-file-input-cyber label {
            background-color: var(--border-cyber); 
            color: var(--text-cyber-green);
            border: 1px solid var(--text-cyber-green-dim);
            padding: 0.75rem 1.5rem;
            transition: all 0.3s;
            display: inline-block;
            border-radius: 0.25rem;
        }
        .styled-file-input-cyber label:hover {
            background-color: var(--text-cyber-green-dim);
            color: var(--bg-dark-primary);
            box-shadow: 0 0 15px var(--text-cyber-green);
        }

        .results-grid { display: grid; grid-template-columns: 1fr; gap: 1.5rem; }
        @media (min-width: 768px) { .results-grid { grid-template-columns: 260px 1fr; } }
        
        .score-card-results, .findings-card, .gemini-feature-card, .pdf-report-card, .visual-cue-card {
            background-color: var(--bg-dark-secondary);
            border: 1px solid var(--border-cyber);
            padding: 1.5rem;
            border-radius: 0.5rem;
        }
        .chart-container-results { position: relative; width: 100%; max-width: 180px; height: 180px; margin: 0 auto 1rem auto; }
        .findings-card { max-height: 320px; overflow-y: auto; } 
        .gemini-output-container { max-height: 200px; overflow-y: auto; }
        
        .finding-category-title, .gemini-output-title {
            font-family: 'Orbitron', sans-serif;
            font-size: 1.05rem; font-weight: 500; color: var(--accent-cyan);
            margin-top: 1rem; padding-bottom: 0.3rem; border-bottom: 1px solid var(--border-cyber);
        }
        .findings-list-item { padding: 0.3rem 0; font-size: 0.85rem; color: var(--text-gray-light); position: relative; padding-left: 1.5rem; }
        .findings-list-item::before { content: '>'; position: absolute; left: 0; color: var(--text-cyber-green); font-family: monospace; font-weight: bold; }
        .finding-score-impact { font-size: 0.75rem; color: var(--text-gray-medium); margin-left: 0.5rem; }

        .action-button, .gemini-button, .pdf-button {
            position: relative; overflow: hidden;
            transition: all 0.3s ease;
            padding: 0.75rem 1.5rem; font-weight: 600; border-radius: 0.25rem;
            display: flex; align-items: center; justify-content: center; gap: 0.5rem;
            border: 1px solid var(--text-cyber-green-dim);
            text-shadow: 0 0 5px var(--text-cyber-green);
            cursor: pointer;
        }
        .action-button:active, .gemini-button:active, .pdf-button:active {
            transform: scale(0.98);
            filter: brightness(0.9);
        }
        .action-button:hover, .gemini-button:hover, .pdf-button:hover {
            box-shadow: 0 0 20px var(--text-cyber-green);
            border-color: var(--text-cyber-green);
        }
        
        .primary-analyze-button {
            background: var(--text-cyber-green-dim);
            color: var(--bg-dark-primary);
        }
        .primary-analyze-button:hover { background: var(--text-cyber-green); }

        .gemini-button { background-color: transparent; color: var(--accent-cyan); border-color: var(--accent-cyan); }
        .gemini-button:hover { background-color: var(--accent-cyan); color: var(--bg-dark-primary); box-shadow: 0 0 20px var(--accent-cyan); }
        .gemini-button:disabled { border-color: #444; color: #666; cursor: not-allowed; text-shadow: none; opacity: 0.5; }
        
        .pdf-button { background-color: transparent; color: var(--accent-magenta); border-color: var(--accent-magenta); margin-top: 0.5rem; font-size: 0.8rem; padding: 0.5rem 1rem;}
        .pdf-button:hover { background-color: var(--accent-magenta); color: var(--bg-dark-primary); box-shadow: 0 0 20px var(--accent-magenta); }
        .pdf-button:disabled { border-color: #444; color: #666; cursor: not-allowed; text-shadow: none; opacity: 0.5; }

        .gemini-output-content {
            background-color: var(--bg-dark-tertiary); padding: 0.75rem; border-radius: 0.25rem;
            font-size: 0.85rem; white-space: pre-wrap; word-wrap: break-word;
            max-height: 180px; overflow-y: auto; border: 1px solid var(--border-cyber);
            color: var(--text-gray-light); font-family: 'Noto Sans Bengali', 'Roboto Mono', monospace;
            min-height: 50px; /* For typing effect visibility */
        }
        .copy-button {
            background-color: var(--accent-magenta); color: white; padding: 0.25rem 0.5rem; font-size: 0.7rem; border-radius: 0.2rem;
            margin-top: 0.5rem; transition: background-color 0.2s; border: none;
        }
        .copy-button:hover { background-color: #cc00cc; }

        /* Enhanced Loader Styles */
        .loader-small {
            width: 1rem; height: 1rem; border-width: 2px;
            border-style: solid;
            border-top-color: var(--text-cyber-green); border-right-color: var(--text-cyber-green);
            border-bottom-color: transparent; border-left-color: transparent;
            animation: spin 0.8s linear infinite;
            border-radius: 50%;
        }
        .main-loader {
            display: flex; flex-direction: column; align-items: center; justify-content: center;
            gap: 1rem;
        }
        .main-loader .loader-cyber {
            width: 50px; height: 50px;
            border: 3px solid transparent;
            border-top-color: var(--accent-cyan);
            border-right-color: var(--accent-cyan);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            position: relative;
        }
        .main-loader .loader-cyber::before {
            content: ''; position: absolute; top: 5px; left: 5px; right: 5px; bottom: 5px;
            border: 3px solid transparent;
            border-top-color: var(--text-cyber-green);
            border-left-color: var(--text-cyber-green);
            border-radius: 50%;
            animation: spin 1.5s linear infinite reverse;
        }
        .main-loader .loader-text {
            font-family: 'Orbitron', sans-serif;
            color: var(--accent-cyan);
            font-size: 1.1rem;
            letter-spacing: 1px;
            animation: pulseText 1.5s infinite ease-in-out;
        }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
        @keyframes pulseText { 0%, 100% { opacity: 0.7; } 50% { opacity: 1; text-shadow: 0 0 5px var(--accent-cyan); } }


        ::-webkit-scrollbar { width: 6px; }
        ::-webkit-scrollbar-track { background: var(--bg-dark-tertiary); border-radius: 10px; }
        ::-webkit-scrollbar-thumb { background: var(--border-cyber); border-radius: 10px; }
        ::-webkit-scrollbar-thumb:hover { background: var(--text-cyber-green-dim); }

        .back-button {
            background-color: var(--bg-dark-tertiary);
            color: var(--text-cyber-green-dim);
            border: 1px solid var(--border-cyber);
            padding: 0.4rem 0.8rem;
            font-size: 0.8rem;
            border-radius: 0.25rem;
            transition: all 0.3s;
        }
        .back-button:hover {
            background-color: var(--border-cyber);
            color: var(--text-cyber-green);
            box-shadow: 0 0 10px var(--border-cyber);
        }
        .input-screen-header { display: flex; justify-content: space-between; align-items: center; width: 100%;}

        /* Styles for the hidden div used for PDF generation via html2canvas */
        #pdf-render-area {
            position: absolute;
            left: -9999px; /* Move off-screen */
            width: 595pt; /* A4 width in points for html2canvas */
            padding: 30pt; /* Padding for the content within the PDF page */
            background-color: white; 
            color: black; 
            font-family: 'Noto Sans Bengali', Arial, sans-serif; /* Crucial for html2canvas to use this font */
            line-height: 1.6;
            font-size: 10pt; /* Base font size for PDF */
        }
        #pdf-render-area h1, #pdf-render-area h2, #pdf-render-area h3, #pdf-render-area h4, #pdf-render-area h5, #pdf-render-area h6 {
            color: #1a237e; /* Dark blue for headings */
            font-family: 'Noto Sans Bengali', Arial, sans-serif;
            margin-top: 12pt;
            margin-bottom: 6pt;
        }
        #pdf-render-area h1 { font-size: 18pt; font-weight: bold; text-align: center; margin-bottom: 20pt;}
        #pdf-render-area h2 { font-size: 16pt; font-weight: bold; }
        #pdf-render-area h3 { font-size: 14pt; font-weight: bold; color: #283593; } /* Slightly lighter blue */
        #pdf-render-area h4 { font-size: 12pt; font-weight: bold; color: #3949ab; }

        #pdf-render-area p, #pdf-render-area li {
            color: #212121; /* Dark gray for text */
            font-family: 'Noto Sans Bengali', Arial, sans-serif;
            margin-bottom: 8pt;
        }
         #pdf-render-area pre { /* For AI explanation/reply */
            background-color: #f5f5f5;
            border: 1px solid #e0e0e0;
            padding: 8pt;
            border-radius: 4pt;
            font-family: 'Noto Sans Bengali', 'Roboto Mono', monospace; /* Ensure correct font */
            font-size: 9pt;
            white-space: pre-wrap;
            word-wrap: break-word;
            margin-bottom: 10pt;
        }
        #pdf-render-area ul { list-style-type: none; padding-left: 0; }
        #pdf-render-area li::before { content: "• "; color: #555; margin-right: 5pt; }
        #pdf-render-area strong { font-weight: bold; color: #000; }
        #pdf-render-area .pdf-section-title { 
            font-size: 14pt; font-weight: bold; margin-top: 20pt; margin-bottom: 10pt; 
            border-bottom: 1.5px solid #757575; padding-bottom: 4pt; color: #1a237e;
        }
        #pdf-render-area .pdf-subsection-title { 
            font-size: 12pt; font-weight: bold; margin-top: 15pt; margin-bottom: 5pt; color: #283593;
        }
        #pdf-render-area .pdf-finding-item { margin-bottom: 6pt; line-height: 1.4;}
        #pdf-render-area .pdf-disclaimer { 
            font-size: 7pt; color: #757575; margin-top: 30pt; border-top: 1px solid #e0e0e0; padding-top: 10pt;
        }
        #pdf-render-area .input-summary {
            background-color: #e8f0fe; /* Light blue background for input */
            border-left: 3px solid #1e88e5; /* Blue left border */
            padding: 10pt;
            margin-bottom: 15pt;
            font-style: italic;
        }

        /* Custom Modal Styles */
        .custom-modal-overlay {
            position: fixed; top: 0; left: 0; width: 100%; height: 100%;
            background-color: rgba(0,0,0,0.7); backdrop-filter: blur(5px);
            display: none; align-items: center; justify-content: center; z-index: 1000;
            opacity: 0; transition: opacity 0.3s ease;
        }
        .custom-modal-overlay.active { display: flex; opacity: 1; }
        .custom-modal-content {
            background-color: var(--bg-dark-secondary);
            color: var(--text-gray-light);
            padding: 2rem; border-radius: 0.5rem;
            border: 1px solid var(--border-cyber);
            box-shadow: 0 0 30px rgba(0, 255, 0, 0.2);
            width: 90%; max-width: 500px;
            text-align: center;
            transform: scale(0.9); transition: transform 0.3s ease;
        }
        .custom-modal-overlay.active .custom-modal-content { transform: scale(1); }
        .custom-modal-content h3 {
            font-family: 'Orbitron', sans-serif; color: var(--accent-cyan);
            font-size: 1.5rem; margin-bottom: 1rem;
        }
        .custom-modal-content p { font-size: 1rem; margin-bottom: 1.5rem; line-height: 1.6; }
        .custom-modal-content button {
            background-color: var(--text-cyber-green-dim); color: var(--bg-dark-primary);
            border: none; padding: 0.6rem 1.2rem; border-radius: 0.25rem;
            font-weight: bold; cursor: pointer; transition: background-color 0.3s;
        }
        .custom-modal-content button:hover { background-color: var(--text-cyber-green); }
        .custom-modal-content.error h3 { color: var(--error-red); }
        .custom-modal-content.success h3 { color: var(--success-green); }
        .custom-modal-content.warning h3 { color: var(--warning-yellow); }

        /* URL Screenshot Placeholder */
        .url-screenshot-placeholder {
            border: 2px dashed var(--border-cyber);
            height: 150px;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            text-align: center;
            color: var(--text-gray-medium);
            animation: pulseBorder 2s infinite;
        }
        .url-screenshot-placeholder .fa-eye-slash { font-size: 2rem; margin-bottom: 0.5rem; }
        @keyframes pulseBorder { 0%, 100% { border-color: var(--border-cyber); } 50% { border-color: var(--text-cyber-green); } }

        /* File Icon Placeholder */
        .file-icon-placeholder {
            font-size: 3rem; color: var(--accent-cyan);
            margin-bottom: 0.5rem;
        }

    </style>
</head>
<body>
    <div id="pdf-render-area" style="font-family: 'Noto Sans Bengali', Arial, sans-serif;"></div> 

    <div id="customModal" class="custom-modal-overlay">
        <div class="custom-modal-content">
            <h3 id="customModalTitle">বিজ্ঞপ্তি</h3>
            <p id="customModalMessage">বার্তা এখানে...</p>
            <button id="customModalCloseBtn">বন্ধ করুন</button>
        </div>
    </div>

    <div class="app-container">
        <header class="app-header text-center mb-8">
            <h1>Banglar Shahzada ফিশিং গার্ড</h1>
            <p>আপনার ডিজিটাল সুরক্ষার পরবর্তী প্রজন্মের বিশ্বস্ত প্রহরী</p>
        </header>

        <section id="selectionScreen" class="screen active">
            <h2 class="text-3xl font-semibold text-center text-cyan-400 mb-10 font-['Orbitron']">কি বিশ্লেষণ করতে চান?</h2>
            <div class="grid md:grid-cols-3 gap-6 md:gap-8">
                <div class="selection-card p-6 md:p-8 rounded-xl text-center" data-inputtype="text">
                    <div class="selection-card-icon">✍️</div>
                    <h3 class="text-xl md:text-2xl font-semibold mb-2">টেক্সট / বার্তা</h3>
                    <p class="text-sm">সন্দেহজনক বার্তা, ইমেইল বা যেকোনো টেক্সট।</p>
                </div>
                <div class="selection-card p-6 md:p-8 rounded-xl text-center" data-inputtype="url">
                    <div class="selection-card-icon">🔗</div>
                    <h3 class="text-xl md:text-2xl font-semibold mb-2">URL ঠিকানা</h3>
                    <p class="text-sm">যেকোনো ওয়েবসাইটের ঠিকানা বা লিংক।</p>
                </div>
                <div class="selection-card p-6 md:p-8 rounded-xl text-center" data-inputtype="file">
                    <div class="selection-card-icon">📁</div>
                    <h3 class="text-xl md:text-2xl font-semibold mb-2">ফাইল আপলোড</h3>
                    <p class="text-sm">টেক্সট ফাইল বা অন্যান্য (এক্সটেনশন ভিত্তিক পরীক্ষা)।</p>
                </div>
            </div>
        </section>

        <section id="inputScreen" class="screen">
            <div class="input-screen-header w-full mb-6">
                <button id="backToSelectionBtn" class="back-button">❮ নির্বাচন স্ক্রিন</button>
                <h2 id="inputTitle" class="text-2xl font-semibold text-cyan-400 font-['Orbitron']">ইনপুট দিন</h2>
                <div style="width: 100px;"></div> 
            </div>
            
            <div id="textInputArea" class="input-type-area hidden w-full space-y-4 flex-grow flex flex-col">
                <label for="mainTextInput" class="input-label">আপনার টেক্সট বা বার্তা:</label>
                <textarea id="mainTextInput" class="input-textarea flex-grow" placeholder="এখানে পেস্ট করুন..."></textarea>
                <button id="aiSummaryBtn" class="w-full action-button gemini-button mt-2 text-sm hidden">
                    <span class="btn-text">✨ AI দিয়ে লম্বা টেক্সটের সারাংশ করুন</span>
                    <div class="loader-small animate-spin rounded-full border-2 hidden"></div>
                </button>
                <p id="aiSummaryNote" class="text-xs text-gray-500 hidden">AI দ্বারা তৈরি সারাংশ নিচে দেখানো হবে। মূল টেক্সটের পরিবর্তে এই সারাংশ বিশ্লেষণ করা হবে।</p>
            </div>

            <div id="urlInputArea" class="input-type-area hidden w-full space-y-4 flex-grow flex flex-col">
                <label for="mainUrlInput" class="input-label">URL ঠিকানা:</label>
                <input type="url" id="mainUrlInput" class="input-field" placeholder="https://example.com">
                <div class="flex-grow"></div> 
            </div>

            <div id="fileInputArea" class="input-type-area hidden w-full space-y-4 flex-grow flex flex-col text-center">
                <label for="mainFileInput" class="input-label mb-3">ফাইল আপলোড করুন:</label>
                <div class="styled-file-input-cyber w-full p-8 border-2 border-dashed border-gray-600 rounded-lg hover:border-text-cyber-green transition flex-grow flex flex-col justify-center items-center">
                    <input type="file" id="mainFileInput" class="hidden" accept=".txt,.eml,.exe,.js,.pdf.exe,.doc,.docx,.zip,.rar,.vbs,.bat,.cmd,.scr,.msi,.jar,.ps1,.sh,.docm,.xlsm,.pptm,.iso,.img,.7z,.hta,.lnk">
                    <label for="mainFileInput" class="cursor-pointer">ফাইল নির্বাচন করুন</label>
                    <p id="mainFileNameDisplay" class="text-sm text-gray-400 mt-3">কোনো ফাইল নির্বাচন করা হয়নি</p>
                </div>
            </div>
            <button id="submitAnalysisBtn" class="w-full mt-6 py-3 px-6 text-white font-bold text-lg rounded-md shadow-lg primary-analyze-button action-button">
                <span>এখন বিশ্লেষণ করুন 🚀</span>
            </button>
        </section>

        <section id="resultsScreen" class="screen">
             <div class="input-screen-header w-full mb-6">
                <button id="backToInputBtn" class="back-button">❮ নতুন বিশ্লেষণ</button>
                <h2 class="text-2xl font-bold text-cyan-400 font-['Orbitron']">বিশ্লেষণ রিপোর্ট</h2>
                <div style="width: 100px;"></div> 
            </div>
            <div id="resultsLoader" class="text-center py-10 my-auto main-loader">
                <div class="loader-cyber"></div>
                <p class="loader-text mt-4">একাধিক স্তরের বিশ্লেষণ চলছে...</p>
            </div>
            <div id="finalReportData" class="hidden results-grid w-full h-full"> 
                <div class="score-card-results flex flex-col justify-between text-center"> 
                    <div>
                        <div id="fileIconDisplayResults" class="file-icon-placeholder hidden text-center my-2">
                            <i class="fas fa-file-alt"></i> </div>
                        <div class="chart-container-results">
                            <canvas id="mainRiskScoreChart"></canvas>
                        </div>
                        <p class="text-5xl font-bold mt-3" id="mainRiskScoreValue">0%</p>
                        <p class="text-xl font-semibold mt-1" id="mainRiskLevelText">নিরাপদ</p>
                        <p class="text-4xl mt-2" id="mainRiskEmoji">✅</p>
                    </div>
                    <button id="downloadPdfBtn" class="w-full pdf-button text-sm hidden">
                        <span class="btn-text">📜 সম্পূর্ণ রিপোর্ট PDF</span>
                        <div class="loader-small animate-spin rounded-full border-2 hidden"></div>
                    </button>
                </div>
                <div class="findings-card flex flex-col"> 
                    <h3 class="text-xl font-semibold text-sky-300 mb-3">বিস্তারিত পর্যবেক্ষণ ও সুপারিশ:</h3>
                    <div id="mainDetailedFindingsList" class="space-y-2 text-sm flex-grow overflow-y-auto pr-2"></div>
                    
                    <div id="geminiFeaturesContainer" class="mt-auto pt-4 border-t border-gray-700 space-y-3">
                        <button id="aiExplanationBtn" class="w-full gemini-button text-sm hidden">
                            <span class="btn-text">✨ AI ব্যাখ্যা পান</span>
                            <div class="loader-small animate-spin rounded-full border-2 hidden"></div>
                        </button>
                        <div id="aiExplanationOutput" class="gemini-output-container hidden">
                            <p class="gemini-output-title text-sm">AI ব্যাখ্যা:</p>
                            <pre class="gemini-output-content"></pre>
                            <button id="downloadAiExplanationPdfBtn" class="w-full pdf-button text-xs mt-2 hidden">
                                <span class="btn-text">📜 শুধু AI ব্যাখ্যা PDF</span>
                                <div class="loader-small animate-spin rounded-full border-2 hidden"></div>
                            </button>
                        </div>

                        <button id="aiSafeReplyBtn" class="w-full gemini-button text-sm hidden">
                            <span class="btn-text">✨ নিরাপদ উত্তর লিখুন</span>
                            <div class="loader-small animate-spin rounded-full border-2 hidden"></div>
                        </button>
                        <div id="aiSafeReplyOutput" class="gemini-output-container hidden">
                            <p class="gemini-output-title text-sm">AI দ্বারা প্রস্তাবিত নিরাপদ উত্তর:</p>
                            <pre class="gemini-output-content"></pre>
                            <button class="copy-button" id="copyReplyBtn">উত্তর কপি করুন</button>
                        </div>

                        <button id="aiThreatIntelBtn" class="w-full gemini-button text-sm hidden">
                            <span class="btn-text">✨ AI দিয়ে URLটির ঝুঁকি সম্পর্কে আরও জানুন</span>
                            <div class="loader-small animate-spin rounded-full border-2 hidden"></div>
                        </button>
                        <div id="aiThreatIntelOutput" class="gemini-output-container hidden">
                            <p class="gemini-output-title text-sm">AI থ্রেট ইন্টেলিজেন্স (URL):</p>
                            <pre class="gemini-output-content"></pre>
                            <button id="downloadAiThreatIntelPdfBtn" class="w-full pdf-button text-xs mt-2 hidden">
                                <span class="btn-text">📜 শুধু থ্রেট ইন্টেল PDF</span>
                                <div class="loader-small animate-spin rounded-full border-2 hidden"></div>
                            </button>
                        </div>

                        <button id="aiEmailDeconstructBtn" class="w-full gemini-button text-sm hidden">
                            <span class="btn-text">✨ AI দিয়ে ইমেইলটির প্রতারণা কৌশল বিশ্লেষণ করুন</span>
                            <div class="loader-small animate-spin rounded-full border-2 hidden"></div>
                        </button>
                        <div id="aiEmailDeconstructOutput" class="gemini-output-container hidden">
                            <p class="gemini-output-title text-sm">AI ইমেইল বিশ্লেষণ:</p>
                            <pre class="gemini-output-content"></pre>
                            <button id="downloadAiEmailDeconstructPdfBtn" class="w-full pdf-button text-xs mt-2 hidden">
                                <span class="btn-text">📜 শুধু ইমেইল বিশ্লেষণ PDF</span>
                                <div class="loader-small animate-spin rounded-full border-2 hidden"></div>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div id="urlScreenshotPlaceholderResults" class="hidden mt-4 visual-cue-card">
                <h4 class="text-md font-semibold text-sky-400 mb-2">URL ভিজ্যুয়াল প্রিভিউ (সিমুলেটেড):</h4>
                <div class="url-screenshot-placeholder">
                    <i class="fas fa-eye-slash"></i>
                    <span>ওয়েবসাইট কন্টেন্ট স্ক্যান করা হচ্ছে...</span>
                </div>
            </div>
            <div id="mainFileContentPreviewResults" class="hidden mt-4 findings-card">
                 <h4 class="text-md font-semibold text-sky-400 mb-1">আপলোড করা ফাইলের টেক্সট প্রিভিউ (যদি প্রযোজ্য):</h4>
                 <pre id="mainFileContentPreviewPreResults" class="bg-gray-950 p-2 rounded-md text-xs text-sky-300 max-h-28 overflow-y-auto whitespace-pre-wrap border border-gray-700"></pre>
            </div>
        </section>
    </div>

    <footer class="text-center mt-8 py-4 w-full max-w-5xl">
        <p class="text-xs text-slate-500">© ২০২৪ Banglar Shahzada ফিশিং গার্ড v2। এই অ্যাপ্লিকেশনটি ডেমো এবং শিক্ষামূলক উদ্দেশ্যে তৈরি। Gemini API ইন্টিগ্রেশন পরীক্ষামূলক।</p>
    </footer>

<script>
    // --- START OF BANGLA FONT DATA FOR JSPDF (CRITICAL PLACEHOLDER) ---
    const banglaFontBase64 = "PLACEHOLDER_REPLACE_WITH_ACTUAL_BANGLA_FONT_BASE64_STRING";
    // --- END OF BANGLA FONT DATA FOR JSPDF ---

    // DOM Elements
    const selectionScreen = document.getElementById('selectionScreen');
    const inputScreen = document.getElementById('inputScreen');
    const resultsScreen = document.getElementById('resultsScreen');
    const selectionCards = document.querySelectorAll('.selection-card');
    
    const inputTitle = document.getElementById('inputTitle');
    const inputTypeAreas = {
        text: document.getElementById('textInputArea'),
        url: document.getElementById('urlInputArea'),
        file: document.getElementById('fileInputArea')
    };
    const mainTextInput = document.getElementById('mainTextInput');
    const mainUrlInput = document.getElementById('mainUrlInput');
    const mainFileInput = document.getElementById('mainFileInput');
    const mainFileNameDisplay = document.getElementById('mainFileNameDisplay');
    const submitAnalysisBtn = document.getElementById('submitAnalysisBtn');
    const backToSelectionBtn = document.getElementById('backToSelectionBtn');
    const backToInputBtn = document.getElementById('backToInputBtn');

    const aiSummaryBtn = document.getElementById('aiSummaryBtn');
    const aiSummaryNote = document.getElementById('aiSummaryNote');

    const resultsLoader = document.getElementById('resultsLoader');
    const finalReportData = document.getElementById('finalReportData');
    const mainRiskScoreValue = document.getElementById('mainRiskScoreValue');
    const mainRiskLevelText = document.getElementById('mainRiskLevelText');
    const mainRiskEmoji = document.getElementById('mainRiskEmoji');
    const mainDetailedFindingsList = document.getElementById('mainDetailedFindingsList');
    const scoreCardResultsDiv = document.querySelector('.score-card-results');
    const mainFileContentPreviewResultsDiv = document.getElementById('mainFileContentPreviewResults');
    const mainFileContentPreviewPreResults = document.getElementById('mainFileContentPreviewPreResults');
    const urlScreenshotPlaceholderResultsDiv = document.getElementById('urlScreenshotPlaceholderResults');
    const fileIconDisplayResults = document.getElementById('fileIconDisplayResults');


    const geminiFeaturesContainer = document.getElementById('geminiFeaturesContainer');
    const aiExplanationBtn = document.getElementById('aiExplanationBtn');
    const aiExplanationOutputDiv = document.getElementById('aiExplanationOutput');
    const aiExplanationOutputPre = aiExplanationOutputDiv.querySelector('pre');
    const downloadAiExplanationPdfBtn = document.getElementById('downloadAiExplanationPdfBtn');

    const aiSafeReplyBtn = document.getElementById('aiSafeReplyBtn');
    const aiSafeReplyOutputDiv = document.getElementById('aiSafeReplyOutput');
    const aiSafeReplyOutputPre = aiSafeReplyOutputDiv.querySelector('pre');
    const copyReplyBtn = document.getElementById('copyReplyBtn');
    const downloadPdfBtn = document.getElementById('downloadPdfBtn');

    // New Gemini Feature DOM Elements
    const aiThreatIntelBtn = document.getElementById('aiThreatIntelBtn');
    const aiThreatIntelOutputDiv = document.getElementById('aiThreatIntelOutput');
    const aiThreatIntelOutputPre = aiThreatIntelOutputDiv.querySelector('pre');
    const downloadAiThreatIntelPdfBtn = document.getElementById('downloadAiThreatIntelPdfBtn');

    const aiEmailDeconstructBtn = document.getElementById('aiEmailDeconstructBtn');
    const aiEmailDeconstructOutputDiv = document.getElementById('aiEmailDeconstructOutput');
    const aiEmailDeconstructOutputPre = aiEmailDeconstructOutputDiv.querySelector('pre');
    const downloadAiEmailDeconstructPdfBtn = document.getElementById('downloadAiEmailDeconstructPdfBtn');


    // Custom Modal DOM Elements
    const customModal = document.getElementById('customModal');
    const customModalTitle = document.getElementById('customModalTitle');
    const customModalMessage = document.getElementById('customModalMessage');
    const customModalCloseBtn = document.getElementById('customModalCloseBtn');


    let mainRiskScoreChart = null;
    let currentInputTypeGlobal = 'text';
    let originalInputForGemini = ""; 
    let analysisReportForGemini = {}; 
    let isSummaryUsed = false;
    let userUploadedFileName = null; 

    // --- Custom Modal Functions ---
    function showModal(message, type = 'info', title = 'বিজ্ঞপ্তি') {
        customModalMessage.textContent = message;
        customModalTitle.textContent = title;
        
        const modalContent = customModal.querySelector('.custom-modal-content');
        modalContent.classList.remove('error', 'success', 'warning');
        if (type === 'error') modalContent.classList.add('error');
        else if (type === 'success') modalContent.classList.add('success');
        else if (type === 'warning') modalContent.classList.add('warning');
        
        customModal.classList.add('active');
    }
    customModalCloseBtn.addEventListener('click', () => customModal.classList.remove('active'));
    customModal.addEventListener('click', (event) => { 
        if (event.target === customModal) {
            customModal.classList.remove('active');
        }
    });


    function navigateToScreen(screenId) {
        document.querySelectorAll('.screen').forEach(s => s.classList.remove('active'));
        document.getElementById(screenId).classList.add('active');
        if (screenId !== 'resultsScreen') {
            // Reset all AI output areas and buttons
            aiExplanationOutputDiv.classList.add('hidden');
            aiSafeReplyOutputDiv.classList.add('hidden');
            aiThreatIntelOutputDiv.classList.add('hidden');
            aiEmailDeconstructOutputDiv.classList.add('hidden');

            aiExplanationOutputPre.textContent = '';
            aiSafeReplyOutputPre.textContent = '';
            aiThreatIntelOutputPre.textContent = '';
            aiEmailDeconstructOutputPre.textContent = '';
            
            downloadPdfBtn.classList.add('hidden');
            if(downloadAiExplanationPdfBtn) downloadAiExplanationPdfBtn.classList.add('hidden');
            if(downloadAiThreatIntelPdfBtn) downloadAiThreatIntelPdfBtn.classList.add('hidden');
            if(downloadAiEmailDeconstructPdfBtn) downloadAiEmailDeconstructPdfBtn.classList.add('hidden');
            
            urlScreenshotPlaceholderResultsDiv.classList.add('hidden');
            fileIconDisplayResults.classList.add('hidden');
        }
    }

    selectionCards.forEach(card => {
        card.addEventListener('click', () => {
            currentInputTypeGlobal = card.dataset.inputtype;
            inputTitle.textContent = card.querySelector('h3').textContent + " ইনপুট দিন";
            Object.values(inputTypeAreas).forEach(area => area.classList.add('hidden'));
            inputTypeAreas[currentInputTypeGlobal].classList.remove('hidden');
            inputTypeAreas[currentInputTypeGlobal].classList.add('flex'); 
            
            aiSummaryBtn.classList.add('hidden'); 
            if (currentInputTypeGlobal === 'text') {
                 aiSummaryBtn.classList.toggle('hidden', mainTextInput.value.trim().length < 200);
            }
            aiSummaryNote.classList.add('hidden');
            isSummaryUsed = false;
            navigateToScreen('inputScreen');
        });
    });

    backToSelectionBtn.addEventListener('click', () => navigateToScreen('selectionScreen'));
    backToInputBtn.addEventListener('click', () => {
        mainTextInput.value = '';
        mainUrlInput.value = '';
        mainFileInput.value = ''; 
        mainFileNameDisplay.textContent = 'কোনো ফাইল নির্বাচন করা হয়নি'; 
        userUploadedFileName = null; 
        aiSummaryNote.classList.add('hidden');
        isSummaryUsed = false;
        Object.values(inputTypeAreas).forEach(area => area.classList.add('hidden'));
        inputTypeAreas[currentInputTypeGlobal].classList.remove('hidden');
        inputTypeAreas[currentInputTypeGlobal].classList.add('flex');
        navigateToScreen('inputScreen'); 
    });

    mainFileInput.addEventListener('change', (event) => {
        if (event.target.files.length > 0) {
            mainFileNameDisplay.textContent = `নির্বাচিত: ${event.target.files[0].name}`;
            userUploadedFileName = event.target.files[0].name; 
        } else {
            mainFileNameDisplay.textContent = 'কোনো ফাইল নির্বাচন করা হয়নি';
            userUploadedFileName = null;
        }
    });

    mainTextInput.addEventListener('input', () => {
        if (currentInputTypeGlobal === 'text') {
            aiSummaryBtn.classList.toggle('hidden', mainTextInput.value.trim().length < 200); 
            if (isSummaryUsed) { 
                isSummaryUsed = false;
                aiSummaryNote.classList.add('hidden');
            }
        }
    });
    
    function initializeMainChartResults() {
        const ctx = document.getElementById('mainRiskScoreChart').getContext('2d');
        if (mainRiskScoreChart) mainRiskScoreChart.destroy();
        mainRiskScoreChart = new Chart(ctx, {
            type: 'doughnut',
            data: { 
                labels: ['ঝুঁকি', 'নিরাপত্তা'],
                datasets: [{
                    data: [0, 100],
                    backgroundColor: ['var(--text-cyber-green)', 'var(--bg-dark-tertiary)'], 
                    borderColor: 'var(--bg-dark-secondary)', 
                    borderWidth: 5, hoverOffset: 8,
                }]
            },
            options: { 
                 responsive: true, maintainAspectRatio: false, cutout: '75%',
                plugins: { legend: { display: false }, tooltip: { enabled: false } },
                animation: { duration: 1200, easing: 'easeOutExpo' }
            }
        });
    }
    initializeMainChartResults();

    function typeWriter(element, text, speed = 30) {
        element.textContent = ''; 
        let i = 0;
        function type() {
            if (i < text.length) {
                element.textContent += text.charAt(i);
                i++;
                setTimeout(type, speed);
            }
        }
        type();
    }

    async function callGeminiAPI(prompt, buttonElement) {
        const geminiLoader = buttonElement.querySelector('.loader-small');
        const buttonText = buttonElement.querySelector('.btn-text');
        const originalButtonText = buttonText.textContent;

        buttonText.textContent = 'প্রসেসিং...';
        if(geminiLoader) geminiLoader.classList.remove('hidden');
        buttonElement.disabled = true;

        const apiKey = ""; 
        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;
        
        let chatHistory = [{ role: "user", parts: [{ text: prompt }] }];
        const payload = { contents: chatHistory };

        try {
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });
            if (!response.ok) {
                const errorData = await response.json().catch(() => ({error: {message: "Unknown API error"}}));
                console.error('Gemini API Error Response:', errorData);
                throw new Error(`Gemini API থেকে ত্রুটি: ${errorData.error?.message || response.statusText}`);
            }
            const result = await response.json();
            if (result.candidates && result.candidates.length > 0 &&
                result.candidates[0].content && result.candidates[0].content.parts &&
                result.candidates[0].content.parts.length > 0) {
                return result.candidates[0].content.parts[0].text;
            } else {
                console.error('Gemini API Error: Unexpected response structure', result);
                throw new Error('Gemini API থেকে কোনো উত্তর পাওয়া যায়নি বা উত্তরটি সঠিক ফরম্যাটে নেই।');
            }
        } catch (error) {
            console.error('Gemini API Call Failed:', error);
            showModal(`Gemini API সংযোগে সমস্যা: ${error.message}`, 'error', 'API ত্রুটি');
            return `ত্রুটি: ${error.message}`;
        } finally {
            buttonText.textContent = originalButtonText;
            if(geminiLoader) geminiLoader.classList.add('hidden');
            buttonElement.disabled = false;
        }
    }

    aiSummaryBtn.addEventListener('click', async () => {
        const longText = mainTextInput.value.trim();
        if (longText.length < 200) { 
            showModal("সারাংশ তৈরি করার জন্য টেক্সটটি যথেষ্ট দীর্ঘ নয় (কমপক্ষে ২০০ অক্ষর প্রয়োজন)।", 'warning', 'অপর্যাপ্ত টেক্সট');
            return;
        }
        const prompt = `অনুগ্রহ করে নিচের দীর্ঘ বার্তাটির একটি সংক্ষিপ্ত ও মূলভাব বজায় রেখে বাংলাতে সারাংশ তৈরি করুন। এই সারাংশটি ফিশিং সনাক্তকরণের জন্য ব্যবহৃত হবে। সারাংশটি ২৫০ শব্দের মধ্যে সীমাবদ্ধ রাখুন:\n\n"${longText}"`;
        const summary = await callGeminiAPI(prompt, aiSummaryBtn);
        if (summary && !summary.startsWith("ত্রুটি:")) {
            mainTextInput.value = summary; 
            isSummaryUsed = true;
            aiSummaryNote.textContent = 'উপরের টেক্সটটি AI দ্বারা তৈরি সারাংশ। এটি বিশ্লেষণ করা হবে।';
            aiSummaryNote.classList.remove('hidden');
            aiSummaryBtn.classList.add('hidden'); 
        } else if (summary && summary.startsWith("ত্রুটি:")) {
            aiSummaryNote.textContent = summary; 
            aiSummaryNote.classList.remove('hidden');
        }
    });

    aiExplanationBtn.addEventListener('click', async () => {
        const findingsText = analysisReportForGemini.findings ? 
            Object.values(analysisReportForGemini.findings).flat().map(f => f.text).join(";\n") : "কোনো নির্দিষ্ট পর্যবেক্ষণ নেই";
        const prompt = `আমার ফিশিং সনাক্তকরণ টুল একটি ${currentInputTypeGlobal === 'url' ? 'URL' : currentInputTypeGlobal === 'file' ? `ফাইল (${userUploadedFileName || 'নামবিহীন'})` : 'বার্তা'} বিশ্লেষণ করেছে। মূল ইনপুট ছিল: "${originalInputForGemini.substring(0,250)}..."। টুলটি এটিকে ${analysisReportForGemini.score}% ঝুঁকিপূর্ণ হিসেবে চিহ্নিত করেছে। প্রধান পর্যবেক্ষণগুলো হলো: "${findingsText}". অনুগ্রহ করে সহজ বাংলা ভাষায় ব্যাখ্যা করুন, কেন এই ইনপুটটি ফিশিং বা ক্ষতিকর হতে পারে এবং ভবিষ্যতে এই ধরনের পরিস্থিতি থেকে সুরক্ষিত থাকার জন্য ব্যবহারকারীকে কী কী সাধারণ পরামর্শ দেওয়া যেতে পারে। উত্তরটি কয়েকটি প্যারাগ্রাফে, বিস্তারিত এবং বোধগম্যভাবে দিন।`;
        
        aiExplanationOutputPre.textContent = ""; 
        aiExplanationOutputDiv.classList.remove('hidden');
        typeWriter(aiExplanationOutputPre, "AI ব্যাখ্যা তৈরি করছে...", 50); 
        const explanation = await callGeminiAPI(prompt, aiExplanationBtn);
        if (explanation && !explanation.startsWith("ত্রুটি:")) {
            typeWriter(aiExplanationOutputPre, explanation);
            if(downloadAiExplanationPdfBtn) downloadAiExplanationPdfBtn.classList.remove('hidden');
        } else {
            typeWriter(aiExplanationOutputPre, explanation || "দুঃখিত, এই মুহূর্তে AI ব্যাখ্যা তৈরি করা সম্ভব হচ্ছে না।");
             if(downloadAiExplanationPdfBtn) downloadAiExplanationPdfBtn.classList.add('hidden');
        }
    });

    aiSafeReplyBtn.addEventListener('click', async () => {
        const prompt = `আমি একটি সন্দেহজনক ${currentInputTypeGlobal === 'url' ? 'URL সম্বলিত বার্তা' : currentInputTypeGlobal === 'file' ? `ফাইল (${userUploadedFileName || 'নামবিহীন'}) সম্বলিত বার্তা` : 'বার্তা'} পেয়েছি: "${originalInputForGemini.substring(0,250)}..."। আমার ফিশিং সনাক্তকরণ টুল এটিকে মাঝারি ঝুঁকিপূর্ণ হিসেবে চিহ্নিত করেছে। এই বার্তার জন্য একটি নিরাপদ, নিরপেক্ষ এবং সংক্ষিপ্ত বাংলা উত্তর তৈরি করে দিন। উত্তরে কোনো ব্যক্তিগত তথ্য প্রকাশ করা যাবে না এবং সম্ভব হলে প্রেরকের উদ্দেশ্য সম্পর্কে আরও তথ্য জানার জন্য ভদ্রভাবে প্রশ্ন করা যেতে পারে। উত্তরটি সরাসরি দিন, কোনো ভূমিকা বা অতিরিক্ত ব্যাখ্যা ছাড়া।`;
        
        aiSafeReplyOutputPre.textContent = ""; 
        aiSafeReplyOutputDiv.classList.remove('hidden');
        typeWriter(aiSafeReplyOutputPre, "AI নিরাপদ উত্তর তৈরি করছে...", 50); 
        const reply = await callGeminiAPI(prompt, aiSafeReplyBtn);
        if (reply && !reply.startsWith("ত্রুটি:")) {
            typeWriter(aiSafeReplyOutputPre, reply);
        } else {
            typeWriter(aiSafeReplyOutputPre, reply || "দুঃখিত, এই মুহূর্তে AI দ্বারা নিরাপদ উত্তর তৈরি করা সম্ভব হচ্ছে না।");
        }
    });

    // Event listener for AI Threat Intel Button
    aiThreatIntelBtn.addEventListener('click', async () => {
        const findingsText = analysisReportForGemini.findings && analysisReportForGemini.findings["URL ও ডোমেইন যাচাইকরণ"] ?
                             analysisReportForGemini.findings["URL ও ডোমেইন যাচাইকরণ"].map(f => f.text).join(";\n") : "কোনো নির্দিষ্ট URL পর্যবেক্ষণ নেই";
        const prompt = `একটি URL, '${originalInputForGemini}', আমাদের ফিশিং সনাক্তকরণ টুল দ্বারা ${analysisReportForGemini.score}% ঝুঁকিপূর্ণ হিসেবে চিহ্নিত হয়েছে। প্রধান পর্যবেক্ষণগুলো হলো: '${findingsText}'. এই তথ্যের উপর ভিত্তি করে, এই URL বা অনুরূপ URL গুলোর সাথে সম্পর্কিত সম্ভাব্য ঝুঁকি সম্পর্কে একটি সংক্ষিপ্ত (৩-৪টি বুলেট পয়েন্টে) বাংলা ভাষায় থ্রেট ইন্টেলিজেন্স সারাংশ দিন। সাধারণ আক্রমণ ভেক্টর, কোন ধরনের ডেটা লক্ষ্যবস্তু হতে পারে, এবং এই ধরনের লিংকের সাথে সম্পর্কিত স্ক্যামারদের সাধারণ উদ্দেশ্যগুলো আলোচনা করুন। যদি URLটি কোনো পরিচিত সেবার ছদ্মবেশ ধারণ করে (যেমন, facebook-login.xyz), তবে ব্র্যান্ডের ছদ্মবেশ ধারণের সম্ভাব্যতা সম্পর্কে মন্তব্য করুন। উত্তরটি সরাসরি বুলেট পয়েন্টে দিন।`;

        aiThreatIntelOutputPre.textContent = "";
        aiThreatIntelOutputDiv.classList.remove('hidden');
        typeWriter(aiThreatIntelOutputPre, "AI থ্রেট ইন্টেলিজেন্স তৈরি করছে...", 50);
        const threatIntel = await callGeminiAPI(prompt, aiThreatIntelBtn);
        if (threatIntel && !threatIntel.startsWith("ত্রুটি:")) {
            typeWriter(aiThreatIntelOutputPre, threatIntel);
            if(downloadAiThreatIntelPdfBtn) downloadAiThreatIntelPdfBtn.classList.remove('hidden');
        } else {
            typeWriter(aiThreatIntelOutputPre, threatIntel || "দুঃখিত, এই মুহূর্তে AI থ্রেট ইন্টেলিজেন্স তৈরি করা সম্ভব হচ্ছে না।");
            if(downloadAiThreatIntelPdfBtn) downloadAiThreatIntelPdfBtn.classList.add('hidden');
        }
    });

    // Event listener for AI Email Deconstruction Button
    aiEmailDeconstructBtn.addEventListener('click', async () => {
        const findingsText = analysisReportForGemini.findings ?
            Object.values(analysisReportForGemini.findings).flat().map(f => f.text).join(";\n") : "কোনো নির্দিষ্ট পর্যবেক্ষণ নেই";
        const prompt = `নিচের টেক্সটটিকে একটি ফিশিং ইমেইল হিসেবে সন্দেহ করা হচ্ছে: '${originalInputForGemini.substring(0, 500)}...'। এটি ঝুঁকি মূল্যায়নে ${analysisReportForGemini.score}% স্কোর পেয়েছে। প্রধান সন্দেহজনক উপাদানগুলো হলো: '${findingsText}'. অনুগ্রহ করে এই ইমেইলটিকে বাংলা ভাষায় বিশ্লেষণ করুন, স্ক্যামারদের দ্বারা ব্যবহারকারীদের প্রতারিত করার জন্য ব্যবহৃত নির্দিষ্ট বাক্যাংশ বা কৌশলগুলো (যেমন: জরুরিতার অনুভূতি তৈরি, জেনেরিক সম্ভাষণ, সন্দেহজনক লিংক, भावनात्मक চালনা, ফিশিংএ প্রচলিত ব্যাকরণ/বানানের ভুল) তুলে ধরুন। পর্যবেক্ষণগুলো একটি তালিকা আকারে উপস্থাপন করুন।`;
        
        aiEmailDeconstructOutputPre.textContent = "";
        aiEmailDeconstructOutputDiv.classList.remove('hidden');
        typeWriter(aiEmailDeconstructOutputPre, "AI ইমেইল বিশ্লেষণ করছে...", 50);
        const deconstruction = await callGeminiAPI(prompt, aiEmailDeconstructBtn);
        if (deconstruction && !deconstruction.startsWith("ত্রুটি:")) {
            typeWriter(aiEmailDeconstructOutputPre, deconstruction);
            if(downloadAiEmailDeconstructPdfBtn) downloadAiEmailDeconstructPdfBtn.classList.remove('hidden');
        } else {
            typeWriter(aiEmailDeconstructOutputPre, deconstruction || "দুঃখিত, এই মুহূর্তে AI দ্বারা ইমেইল বিশ্লেষণ করা সম্ভব হচ্ছে না।");
            if(downloadAiEmailDeconstructPdfBtn) downloadAiEmailDeconstructPdfBtn.classList.add('hidden');
        }
    });


    copyReplyBtn.addEventListener('click', () => {
        if (aiSafeReplyOutputPre.textContent && !aiSafeReplyOutputPre.textContent.startsWith("AI নিরাপদ উত্তর তৈরি করছে...")) {
            const textarea = document.createElement('textarea');
            textarea.value = aiSafeReplyOutputPre.textContent;
            document.body.appendChild(textarea);
            textarea.select();
            try {
                document.execCommand('copy');
                showModal('নিরাপদ উত্তর কপি করা হয়েছে!', 'success', 'কপি সফল');
            } catch (err) {
                console.error('Copy failed', err);
                showModal('উত্তর কপি করতে সমস্যা হয়েছে। অনুগ্রহ করে ম্যানুয়ালি কপি করুন।', 'error', 'কপি ব্যর্থ');
            }
            document.body.removeChild(textarea);
        } else {
            showModal("কপি করার মতো কোনো উত্তর নেই।", 'warning', 'কোনো উত্তর নেই');
        }
    });


    submitAnalysisBtn.addEventListener('click', async () => {
        navigateToScreen('resultsScreen');
        finalReportData.classList.add('hidden');
        resultsLoader.classList.remove('hidden');
        mainFileContentPreviewResultsDiv.classList.add('hidden');
        mainFileContentPreviewPreResults.textContent = '';
        urlScreenshotPlaceholderResultsDiv.classList.add('hidden');
        fileIconDisplayResults.classList.add('hidden');
        
        // Hide all AI feature buttons and outputs initially
        aiExplanationBtn.classList.add('hidden');
        aiSafeReplyBtn.classList.add('hidden');
        aiThreatIntelBtn.classList.add('hidden');
        aiEmailDeconstructBtn.classList.add('hidden');

        aiExplanationOutputDiv.classList.add('hidden');
        aiSafeReplyOutputDiv.classList.add('hidden');
        aiThreatIntelOutputDiv.classList.add('hidden');
        aiEmailDeconstructOutputDiv.classList.add('hidden');
        
        downloadPdfBtn.classList.add('hidden');
        if(downloadAiExplanationPdfBtn) downloadAiExplanationPdfBtn.classList.add('hidden');
        if(downloadAiThreatIntelPdfBtn) downloadAiThreatIntelPdfBtn.classList.add('hidden');
        if(downloadAiEmailDeconstructPdfBtn) downloadAiEmailDeconstructPdfBtn.classList.add('hidden');


        let analysisInput = '';

        if (currentInputTypeGlobal === 'text') {
            analysisInput = mainTextInput.value.trim();
        } else if (currentInputTypeGlobal === 'url') {
            analysisInput = mainUrlInput.value.trim();
            if (analysisInput && !analysisInput.match(/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/i)) {
                showModal("অনুগ্রহ করে একটি সঠিক URL ঠিকানা দিন।", 'error', 'অবৈধ URL');
                resultsLoader.classList.add('hidden');
                navigateToScreen('inputScreen'); 
                return;
            }
            urlScreenshotPlaceholderResultsDiv.classList.remove('hidden');
        } else if (currentInputTypeGlobal === 'file') {
            const file = mainFileInput.files[0];
            if (file) {
                fileIconDisplayResults.classList.remove('hidden');
                const iconClass = getFileIconClass(userUploadedFileName);
                fileIconDisplayResults.innerHTML = `<i class="${iconClass}"></i>`;

                if (file.type === "text/plain" || file.name.endsWith(".eml") || file.name.endsWith(".txt")) {
                    try {
                        analysisInput = await file.text();
                        mainFileContentPreviewPreResults.textContent = analysisInput.substring(0, 700) + (analysisInput.length > 700 ? "..." : "");
                        mainFileContentPreviewResultsDiv.classList.remove('hidden');
                    } catch (e) {
                        showModal("ফাইলটি পড়া সম্ভব হয়নি।", 'error', 'ফাইল ত্রুটি');
                        resultsLoader.classList.add('hidden');
                        navigateToScreen('inputScreen');
                        return;
                    }
                } else {
                     analysisInput = `ফাইল: ${userUploadedFileName}`; 
                }
            }
        }
        originalInputForGemini = analysisInput || userUploadedFileName || "N/A"; 

        if (!analysisInput && !userUploadedFileName) { 
            showModal('অনুগ্রহ করে বিশ্লেষণ করার জন্য কোনো ইনপুট দিন।', 'warning', 'ইনপুট প্রয়োজন');
            resultsLoader.classList.add('hidden');
            navigateToScreen('inputScreen');
            return;
        }
        
        await new Promise(resolve => setTimeout(resolve, 2500)); 

        analysisReportForGemini = performNextGenAnalysisV2(analysisInput, userUploadedFileName, currentInputTypeGlobal, isSummaryUsed);

        mainRiskScoreValue.textContent = `${analysisReportForGemini.score}%`;
        mainRiskLevelText.textContent = analysisReportForGemini.level;
        mainRiskEmoji.textContent = analysisReportForGemini.emoji;

        mainDetailedFindingsList.innerHTML = ''; 
        for (const category in analysisReportForGemini.findings) {
            if (analysisReportForGemini.findings[category].length > 0) {
                const categoryDiv = document.createElement('div');
                const categoryTitleEl = document.createElement('p'); 
                categoryTitleEl.className = 'finding-category-title';
                categoryTitleEl.textContent = category;
                categoryDiv.appendChild(categoryTitleEl);
                
                const ul = document.createElement('ul');
                ul.className = 'space-y-1.5';
                analysisReportForGemini.findings[category].forEach(findingObj => {
                    const li = document.createElement('li');
                    li.className = 'findings-list-item';
                    li.innerHTML = `${findingObj.text} <span class="finding-score-impact">(${findingObj.impact > 0 ? '+' : ''}${findingObj.impact} পয়েন্ট)</span>`;
                    ul.appendChild(li);
                });
                categoryDiv.appendChild(ul);
                mainDetailedFindingsList.appendChild(categoryDiv);
            }
        }
        if(Object.values(analysisReportForGemini.findings).every(arr => arr.length === 0) && analysisReportForGemini.score < 10) {
            const categoryDiv = document.createElement('div');
            const categoryTitleEl = document.createElement('p');
            categoryTitleEl.className = 'finding-category-title';
            categoryTitleEl.textContent = "সাধারণ পর্যবেক্ষণ";
            categoryDiv.appendChild(categoryTitleEl);
            const li = document.createElement('li');
            li.className = 'findings-list-item';
            li.textContent = "কোনো সুস্পষ্ট তাৎক্ষণিক ঝুঁকি সনাক্ত করা যায়নি। তবে সর্বদা অনলাইন কার্যক্রমে সতর্ক থাকুন।";
            categoryDiv.appendChild(li);
            mainDetailedFindingsList.appendChild(categoryDiv);
        }

        mainRiskScoreChart.data.datasets[0].data = [analysisReportForGemini.score, 100 - analysisReportForGemini.score];
        let chartColor = 'var(--text-cyber-green)'; 
        let textColorClass = 'text-green-400'; 
        let borderColorClass = 'border-green-500';

        if (analysisReportForGemini.score >= 75) { chartColor = '#ef4444'; textColorClass = 'text-red-500'; borderColorClass = 'border-red-500';} 
        else if (analysisReportForGemini.score >= 50) { chartColor = '#f97316'; textColorClass = 'text-orange-500'; borderColorClass = 'border-orange-500';} 
        else if (analysisReportForGemini.score >= 25) { chartColor = '#eab308'; textColorClass = 'text-yellow-500'; borderColorClass = 'border-yellow-500';} 
        
        mainRiskScoreChart.data.datasets[0].backgroundColor = [chartColor, 'var(--bg-dark-tertiary)']; 
        mainRiskScoreChart.update();

        scoreCardResultsDiv.className = `score-card-results text-center p-6 rounded-lg border-2 ${borderColorClass}`;
        mainRiskScoreValue.className = `text-5xl font-bold mt-3 ${textColorClass}`;
        mainRiskLevelText.className = `text-xl font-semibold mt-1 ${textColorClass}`;
        mainRiskEmoji.className = `text-4xl mt-2 ${textColorClass}`; 

        // Conditional display of AI feature buttons
        if (analysisReportForGemini.score >= 40) { 
            aiExplanationBtn.classList.remove('hidden');
        }
        if (analysisReportForGemini.score >= 20 && analysisReportForGemini.score < 75 && (currentInputTypeGlobal === 'text' || (currentInputTypeGlobal === 'file' && userUploadedFileName && (userUploadedFileName.endsWith('.txt') || userUploadedFileName.endsWith('.eml'))))) {
            aiSafeReplyBtn.classList.remove('hidden');
        }
        if (currentInputTypeGlobal === 'url' && analysisReportForGemini.score >= 50) {
            aiThreatIntelBtn.classList.remove('hidden');
        }
        const isTextOrReadableFile = currentInputTypeGlobal === 'text' || (currentInputTypeGlobal === 'file' && userUploadedFileName && (userUploadedFileName.endsWith('.txt') || userUploadedFileName.endsWith('.eml')));
        if (isTextOrReadableFile && analysisReportForGemini.score >= 50) {
            aiEmailDeconstructBtn.classList.remove('hidden');
        }

        downloadPdfBtn.classList.remove('hidden');

        resultsLoader.classList.add('hidden');
        finalReportData.classList.remove('hidden');
        isSummaryUsed = false; 
        aiSummaryNote.classList.add('hidden'); 
        if (currentInputTypeGlobal === 'text') { 
            aiSummaryBtn.classList.toggle('hidden', mainTextInput.value.trim().length < 200);
        }
    });

    function getFileIconClass(fileName) {
        if (!fileName) return 'fas fa-file-alt'; 
        const ext = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase();
        switch (ext) {
            case 'txt': return 'fas fa-file-alt';
            case 'eml': return 'fas fa-envelope';
            case 'pdf': return 'fas fa-file-pdf';
            case 'doc': case 'docx': return 'fas fa-file-word';
            case 'xls': case 'xlsx': return 'fas fa-file-excel';
            case 'ppt': case 'pptx': return 'fas fa-file-powerpoint';
            case 'zip': case 'rar': case '7z': return 'fas fa-file-archive';
            case 'exe': case 'msi': return 'fas fa-cog'; 
            case 'js': case 'vbs': case 'bat': case 'sh': return 'fas fa-file-code';
            case 'jpg': case 'jpeg': case 'png': case 'gif': return 'fas fa-file-image';
            default: return 'fas fa-file';
        }
    }

    async function generatePdfUsingHtml2Canvas(generateOnlyAiContent = false, specificAiFeature = null) {
        const pdfRenderArea = document.getElementById('pdf-render-area');
        pdfRenderArea.innerHTML = ''; 

        let pdfHtml = `<h1>Banglar Shahzada ফিশিং গার্ড - `;
        if (specificAiFeature === 'explanation') pdfHtml += 'AI ব্যাখ্যা রিপোর্ট';
        else if (specificAiFeature === 'threatIntel') pdfHtml += 'AI থ্রেট ইন্টেল রিপোর্ট (URL)';
        else if (specificAiFeature === 'emailDeconstruct') pdfHtml += 'AI ইমেইল বিশ্লেষণ রিপোর্ট';
        else pdfHtml += 'সম্পূর্ণ রিপোর্ট';
        pdfHtml += `</h1>`;
        
        pdfHtml += `<p style="font-size: 9pt; color: #555;">রিপোর্ট তৈরির তারিখ: ${new Date().toLocaleString('bn-BD', { dateStyle: 'long', timeStyle: 'short'})}</p>`;
        
        let inputTypeDisplay = "";
        switch(currentInputTypeGlobal) {
            case "text": inputTypeDisplay = "টেক্সট/বার্তা"; break;
            case "url": inputTypeDisplay = "URL"; break;
            case "file": inputTypeDisplay = `ফাইল (${userUploadedFileName || 'নামবিহীন'})`; break;
        }

        if (!specificAiFeature) { // Full report content
            pdfHtml += `<h2 class="pdf-section-title">বিশ্লেষণের ধরণ: ${inputTypeDisplay}</h2>`;
            pdfHtml += `<h3 class="pdf-subsection-title">বিশ্লেষিত ইনপুট:</h3>`;
            let inputToReport = originalInputForGemini;
            if (currentInputTypeGlobal === 'file' && userUploadedFileName && !(userUploadedFileName.endsWith(".txt") || userUploadedFileName.endsWith(".eml"))){
                inputToReport = `ফাইল: ${userUploadedFileName} (কন্টেন্ট প্রিভিউ এই রিপোর্টে অন্তর্ভুক্ত নয় কারণ এটি টেক্সট-ভিত্তিক ফাইল নয়)।`;
            } else if (isSummaryUsed) {
                inputToReport = `AI দ্বারা তৈরি সারাংশ: ${originalInputForGemini}`;
            }
            pdfHtml += `<p class="input-summary" style="white-space: pre-wrap; word-wrap: break-word;">${inputToReport.substring(0,1000) + (inputToReport.length > 1000 ? "..." : "")}</p>`;

            pdfHtml += `<h2 class="pdf-section-title">সামগ্রিক ফলাফল:</h2>`;
            pdfHtml += `<p><strong>ঝুঁকি স্কোর:</strong> ${analysisReportForGemini.score}%</p>`;
            pdfHtml += `<p><strong>ঝুঁকির মাত্রা:</strong> ${analysisReportForGemini.level} ${analysisReportForGemini.emoji}</p>`;

            pdfHtml += `<h2 class="pdf-section-title">বিস্তারিত পর্যবেক্ষণ:</h2>`;
            for (const category in analysisReportForGemini.findings) {
                if (analysisReportForGemini.findings[category].length > 0) {
                    pdfHtml += `<h3 class="pdf-subsection-title">${category}:</h3><ul>`;
                    analysisReportForGemini.findings[category].forEach(findingObj => {
                        pdfHtml += `<li class="pdf-finding-item">${findingObj.text} (${findingObj.impact > 0 ? '+' : ''}${findingObj.impact} পয়েন্ট)</li>`;
                    });
                    pdfHtml += `</ul>`;
                }
            }
        }

        // Add AI Explanation
        const aiExplanationText = aiExplanationOutputPre.textContent;
        if ((!specificAiFeature || specificAiFeature === 'explanation') && !aiExplanationOutputDiv.classList.contains('hidden') && aiExplanationText && !aiExplanationText.startsWith("AI ব্যাখ্যা তৈরি করছে...")) {
            pdfHtml += `<h2 class="pdf-section-title">AI দ্বারা প্রদত্ত ব্যাখ্যা:</h2>`;
            pdfHtml += `<pre>${aiExplanationText}</pre>`;
        }

        // Add AI Safe Reply (only in full report)
        if (!specificAiFeature) {
            const aiSafeReplyText = aiSafeReplyOutputPre.textContent;
            if (!aiSafeReplyOutputDiv.classList.contains('hidden') && aiSafeReplyText && !aiSafeReplyText.startsWith("AI নিরাপদ উত্তর তৈরি করছে...")) {
                pdfHtml += `<h2 class="pdf-section-title">AI দ্বারা প্রস্তাবিত নিরাপদ উত্তর:</h2>`;
                pdfHtml += `<pre>${aiSafeReplyText}</pre>`;
            }
        }
        
        // Add AI Threat Intel
        const aiThreatIntelText = aiThreatIntelOutputPre.textContent;
        if ((!specificAiFeature || specificAiFeature === 'threatIntel') && !aiThreatIntelOutputDiv.classList.contains('hidden') && aiThreatIntelText && !aiThreatIntelText.startsWith("AI থ্রেট ইন্টেলিজেন্স তৈরি করছে...")) {
            pdfHtml += `<h2 class="pdf-section-title">AI থ্রেট ইন্টেলিজেন্স (URL):</h2>`;
            pdfHtml += `<pre>${aiThreatIntelText}</pre>`;
        }

        // Add AI Email Deconstruction
        const aiEmailDeconstructText = aiEmailDeconstructOutputPre.textContent;
        if ((!specificAiFeature || specificAiFeature === 'emailDeconstruct') && !aiEmailDeconstructOutputDiv.classList.contains('hidden') && aiEmailDeconstructText && !aiEmailDeconstructText.startsWith("AI ইমেইল বিশ্লেষণ করছে...")) {
            pdfHtml += `<h2 class="pdf-section-title">AI ইমেইল বিশ্লেষণ:</h2>`;
            pdfHtml += `<pre>${aiEmailDeconstructText}</pre>`;
        }
        
        pdfHtml += `<p class="pdf-disclaimer">বিশেষ দ্রষ্টব্য: এই রিপোর্টটি একটি স্বয়ংক্রিয় বিশ্লেষণ প্রক্রিয়ার উপর ভিত্তি করে তৈরি এবং এটি শুধুমাত্র শিক্ষামূলক ও তথ্যগত উদ্দেশ্যে প্রদত্ত। এখানে প্রদত্ত তথ্যের উপর ভিত্তি করে কোনো প্রকার আর্থিক বা ব্যক্তিগত সিদ্ধান্ত নেওয়ার আগে অনুগ্রহ করে নিজস্ব বিচারবুদ্ধি প্রয়োগ করুন এবং প্রয়োজনে বিশেষজ্ঞের পরামর্শ নিন। এই টুলের বিশ্লেষণ চূড়ান্ত বা সম্পূর্ণ নির্ভুল নাও হতে পারে।</p>`;
        
        pdfRenderArea.innerHTML = pdfHtml;

        let pdfButtonToLoad, reportNameSuffix;
        if (specificAiFeature === 'explanation') {
            pdfButtonToLoad = downloadAiExplanationPdfBtn;
            reportNameSuffix = 'AI_Explanation';
        } else if (specificAiFeature === 'threatIntel') {
            pdfButtonToLoad = downloadAiThreatIntelPdfBtn;
            reportNameSuffix = 'AI_Threat_Intel';
        } else if (specificAiFeature === 'emailDeconstruct') {
            pdfButtonToLoad = downloadAiEmailDeconstructPdfBtn;
            reportNameSuffix = 'AI_Email_Analysis';
        } else {
            pdfButtonToLoad = downloadPdfBtn;
            reportNameSuffix = 'Full_Report';
        }

        const pdfLoader = pdfButtonToLoad.querySelector('.loader-small');
        const pdfButtonText = pdfButtonToLoad.querySelector('.btn-text');
        const originalPdfButtonText = pdfButtonText.textContent;

        pdfButtonText.textContent = 'তৈরি হচ্ছে...';
        if(pdfLoader) pdfLoader.classList.remove('hidden');
        pdfButtonToLoad.disabled = true;

        try {
            const canvas = await html2canvas(pdfRenderArea, {
                scale: 2, useCORS: true, logging: false,
                onclone: (doc) => { 
                    const style = doc.createElement('style');
                    style.innerHTML = ` body, #pdf-render-area, #pdf-render-area p, #pdf-render-area li, #pdf-render-area pre, #pdf-render-area h1, #pdf-render-area h2, #pdf-render-area h3, #pdf-render-area h4 { font-family: 'Noto Sans Bengali', Arial, sans-serif !important; } `;
                    doc.head.appendChild(style);
                }
            });
            const imgData = canvas.toDataURL('image/png');
            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF('p', 'pt', 'a4');
            const imgProps = pdf.getImageProperties(imgData);
            const pdfWidth = pdf.internal.pageSize.getWidth();
            
            let position = 0;
            const pageMargin = 40;
            const contentWidth = pdfWidth - (2 * pageMargin);
            const contentHeight = (imgProps.height * contentWidth) / imgProps.width; // Calculate height based on aspect ratio and available width
            const pageHeightAvailable = pdf.internal.pageSize.getHeight() - (2 * pageMargin);
            let heightLeft = contentHeight;


            pdf.addImage(imgData, 'PNG', pageMargin, pageMargin, contentWidth, contentHeight);
            heightLeft -= pageHeightAvailable;

            while (heightLeft > 0) {
                position -= pageHeightAvailable; 
                pdf.addPage();
                pdf.addImage(imgData, 'PNG', pageMargin, position + pageMargin, contentWidth, contentHeight); 
                heightLeft -= pageHeightAvailable;
            }
            
            const reportName = `Banglar_Shahzada_${reportNameSuffix}_${new Date().toISOString().slice(0,10).replace(/-/g,'')}.pdf`;
            pdf.save(reportName);

        } catch (error) {
            console.error("Error generating PDF with html2canvas:", error);
            showModal("পিডিএফ তৈরি করতে সমস্যা হয়েছে। অনুগ্রহ করে নিশ্চিত করুন আপনার ব্রাউজারে পপ-আপ ব্লক করা নেই এবং আবার চেষ্টা করুন।", 'error', 'পিডিএফ ত্রুটি');
        } finally {
            pdfButtonText.textContent = originalPdfButtonText;
            if(pdfLoader) pdfLoader.classList.add('hidden');
            pdfButtonToLoad.disabled = false;
            pdfRenderArea.innerHTML = ''; 
        }
    }

    downloadPdfBtn.addEventListener('click', () => generatePdfUsingHtml2Canvas(false, null)); 
    if(downloadAiExplanationPdfBtn) { 
        downloadAiExplanationPdfBtn.addEventListener('click', () => generatePdfUsingHtml2Canvas(true, 'explanation')); 
    }
    if(downloadAiThreatIntelPdfBtn) {
        downloadAiThreatIntelPdfBtn.addEventListener('click', () => generatePdfUsingHtml2Canvas(true, 'threatIntel'));
    }
    if(downloadAiEmailDeconstructPdfBtn) {
        downloadAiEmailDeconstructPdfBtn.addEventListener('click', () => generatePdfUsingHtml2Canvas(true, 'emailDeconstruct'));
    }


    function performNextGenAnalysisV2(text, currentFileName, inputType, summaryWasUsed) { 
        let score = 0;
        const findings = {
            "টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)": [],
            "URL ও ডোমেইন যাচাইকরণ": [],
            "ইমেইল হেডার বিশ্লেষণ (যদি প্রযোজ্য)": [],
            "ফাইল অ্যাটাচমেন্ট স্ক্যান": [],
            "প্রতারণার কৌশল সনাক্তকরণ": []
        };
        const lowerText = text ? text.toLowerCase() : ""; 
        let detectedTechniques = new Set();

        if (summaryWasUsed) {
             findings["টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)"].push({text: `নোট: এই বিশ্লেষণটি AI দ্বারা তৈরি সারাংশের উপর ভিত্তি করে করা হয়েছে।`, impact: 0});
        }

        const keywordsDB = { 
             bn: {
                lures: ["পুরস্কার", "জিতুন", "আইফোন", "গাড়ি", "বিটকয়েন", "ফ্রি গিফট", "বিকাশ একাউন্ট", "নগদ একাউন্ট", "অফার", "ফ্রি ইন্টারনেট", "বিনামূল্যে ডাটা", "সুযোগ হাতছাড়া করবেন না", "লটারি জিতেছেন", "বিরাট ছাড়", "একমাত্র আপনার জন্য", "গোপন অফার", "উপহার", "ক্যাশব্যাক", "অবিলম্ব", "বিনিয়োগ ছাড়াই আয়", "সহজ টাকা", "দ্রুত লাভ"],
                urgency: ["জরুরী", "এখনি", "দ্রুত", "শেষ সুযোগ", "অবিলম্বে", "তাড়াতাড়ি", "এখনই করুন", "সময় সীমিত", "বন্ধ হয়ে যাবে", "অ্যাকাউন্ট লক করা হয়েছে", "সাসপেন্ড করা হবে", "মেয়াদ শেষ", "অবশ্যই করণীয়", "অবশ্যই দেখুন", "সতর্কবার্তা", "হুমকি", "অবগত করানো হচ্ছে", "চূড়ান্ত নোটিশ"],
                credentials: ["পাসওয়ার্ড দিন", "পিন নম্বর", "ওটিপি পাঠান", "OTP ভেরিফাই", "নিশ্চিত করুন আপনার তথ্য", "অ্যাকাউন্ট ভেরিফিকেশন", "লগইন তথ্য", "তথ্য দিন", "ইউজারনেম ও পাসওয়ার্ড", "নিরাপত্তা প্রশ্ন ও উত্তর", "আপডেট করুন আপনার প্রোফাইল", "ব্যক্তিগত তথ্য", "যাচাইকরণ কোড", "আপনার তথ্য আপডেট করুন"],
                financial: ["টাকা পাঠান এখনই", "বিনিয়োগে দ্বিগুণ লাভ", "সহজ শর্তে ঋণ", "কার্ড নম্বর দিন", "ব্যাংক একাউন্ট নম্বর", "ক্রেডিট কার্ডের তথ্য", "বিল পরিশোধ করুন", "ইনভয়েস দেখুন", "ট্রানজেকশন আইডি", "বিকাশ পিন", "নগদ পিন", "অর্থ প্রদান", "অ্যাকাউন্ট ব্যালেন্স", "অর্থের জন্য অনুরোধ"],
                threats: ["একাউন্ট সাসপেন্ড", "একাউন্ট ব্লক", "আইনগত ব্যবস্থা নেওয়া হবে", "জরিমানা করা হবে", "আপনার কম্পিউটার হ্যাক হয়েছে", "ভাইরাস আক্রমণ", "ম্যালওয়্যার সনাক্ত", "আপনার কম্পিউটার ঝুঁকিপূর্ণ অবস্থায় আছে", "তথ্য ফাঁস", "হ্যাকিং প্রচেষ্টা", "অবৈধ কার্যকলাপ"],
                impersonation: ["আমি কাস্টমার কেয়ার থেকে বলছি", "ব্যাংক কর্মকর্তা", "আইনশৃঙ্খলা বাহিনীর সদস্য", "সরকারি কর্মকর্তা", "আপনার কোম্পানির সিইও", "সাপোর্ট টিম", "ফেসবুক সাপোর্ট", "গুগল সাপোর্ট", "বিকাশ এজেন্ট", "নগদ এজেন্ট", "কুরিয়ার সার্ভিস", "বিদ্যুৎ অফিস", "গ্যাস অফিস"]
            },
             en: { 
                lures: ["prize", "win big", "free iphone 15", "claim your car", "bitcoin investment opportunity", "free gift card", "exclusive offer", "free internet data", "don't miss this chance", "you have won lottery", "huge discount", "special offer for you", "secret deal", "your gift is waiting", "cashback", "limited stock", "earn without investment", "easy money", "quick profit"],
                urgency: ["urgent action required", "act immediately", "respond now", "this is your final chance", "limited time offer", "do it now", "offer expires soon", "your account will be closed", "account locked due to suspicious activity", "will be suspended", "deadline approaching", "must do today", "important notification", "security alert", "threat detected", "final notice"],
                credentials: ["enter your password", "provide your PIN", "submit OTP", "verify OTP", "confirm your details", "account verification needed", "login credentials required", "submit your information", "username and password", "security questions and answers", "update your profile information", "personal data", "verification code", "update your credentials"],
                financial: ["send money now", "double your investment", "easy loan approval", "enter card number", "bank account details", "credit card information", "pay your bill", "view invoice", "transaction ID", "bkash PIN", "payment required", "outstanding balance", "wire transfer details", "request for payment"],
                threats: ["account suspension notice", "account blocked", "legal action will be taken", "penalty fee applied", "your computer has been hacked", "virus attack detected", "malware identified", "your computer is at high risk", "data breach alert", "hacking attempt", "illegal activity detected"],
                impersonation: ["this is customer care", "bank representative calling", "member of law enforcement", "government official inquiry", "message from your CEO", "official support team", "Facebook Security Team", "Google Support", "Amazon Support", "DHL/FedEx support", "utility company", "tax office"]
            }
        };
        
        let nlpPoints = 0;
        let keywordMatchCount = 0;

        if (lowerText) { 
            for (const lang in keywordsDB) {
                for (const category in keywordsDB[lang]) {
                    keywordsDB[lang][category].forEach(keyword => {
                        if (lowerText.includes(keyword.toLowerCase())) {
                            let impact = 0;
                            let categoryNameBn = ""; let categoryNameEn = ""; let technique = null;
                            switch (category) {
                                case 'lures': impact = 18; nlpPoints += 7; categoryNameBn = "লোভনীয় প্রস্তাব"; categoryNameEn = "Lure"; technique = "পুরস্কার বা অফারের লোভ দেখানো"; break;
                                case 'urgency': impact = 22; nlpPoints += 12; categoryNameBn = "জরুরী অবস্থা"; categoryNameEn = "Urgency"; technique = "জরুরী অবস্থা তৈরি করে চাপ সৃষ্টি"; break;
                                case 'credentials': impact = 35; nlpPoints += 18; categoryNameBn = "তথ্য চুরি"; categoryNameEn = "Credential Request"; technique = "ব্যক্তিগত বা লগইন তথ্য চুরির চেষ্টা"; break;
                                case 'financial': impact = 28; nlpPoints += 12; categoryNameBn = "আর্থিক লেনদেন"; categoryNameEn = "Financial Transaction"; technique = "আর্থিক লেনদেন বা প্রতারণার চেষ্টা"; break;
                                case 'threats': impact = 30; nlpPoints += 15; categoryNameBn = "ভীতি প্রদর্শন"; categoryNameEn = "Threat"; technique = "ভয় বা হুমকি দেখিয়ে কাজ হাসিলের চেষ্টা"; break;
                                case 'impersonation': impact = 32; nlpPoints +=15; categoryNameBn = "ছদ্মবেশ ধারণ"; categoryNameEn = "Impersonation"; technique = "বিশ্বস্ত ব্যক্তি বা প্রতিষ্ঠানের ছদ্মবেশ ধারণ"; break;
                            }
                            score += impact;
                            findings["টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)"].push({text: `"${keyword}" (${lang === 'bn' ? categoryNameBn : categoryNameEn}) শব্দটি পাওয়া গেছে।`, impact: impact});
                            if(technique) detectedTechniques.add(technique);
                            keywordMatchCount++;
                        }
                    });
                }
            }
            if (keywordMatchCount > 1) { 
                const bonus = keywordMatchCount * 2;
                score += bonus;
                findings["টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)"].push({text: `একাধিক (${keywordMatchCount}টি) ঝুঁকিপূর্ণ কীওয়ার্ডের ধরন পাওয়া গেছে।`, impact: bonus});
            }
            if (nlpPoints > 0 && findings["টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)"].length > 0) { 
                 findings["টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)"].unshift({text: `NLP মডেল ${Math.min(nlpPoints, 100)}% ফিশিং সম্ভাবনা সনাক্ত করেছে (কীওয়ার্ড ও প্যাটার্ন ভিত্তিক)।`, impact: 0});
            }


            if (lowerText.match(/!{2,}|(\burgent\b|\bimportant\b|\bজরুরী\b|\bএখনি\b).{0,10}!+/i)) { 
                const impact = 12; score += impact;
                findings["টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)"].push({text: "বার্তায় অতিরিক্ত জোর বা অস্বাভাবিক আবেগ প্রকাশ করা হয়েছে।", impact: impact});
                detectedTechniques.add("আবেগ ব্যবহার করে প্ররোচনা");
            }
            const words = text.split(/\s+/);
            const upperCaseWords = words.filter(w => w.length > 3 && w === w.toUpperCase() && !w.match(/^\d+$/));
            if (upperCaseWords.length > Math.max(2, Math.floor(words.length * 0.08))) { 
                const impact = 8; score += impact;
                findings["টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)"].push({text: "বার্তায় অস্বাভাবিকভাবে বেশি বড় হাতের অক্ষর ব্যবহার করা হয়েছে।", impact: impact});
            }
            if (lowerText.includes("kindly update your details") || lowerText.includes("your account is restrict please click") || lowerText.includes("প্রিয় গ্রাহক আপনার একাউন্ট") || lowerText.includes("verify your identity by clicking") || lowerText.match(/ক্.?লি.?ক.? ক.?র.?ন/i)) { 
                const impact = 10; score += impact;
                findings["টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)"].push({text: "সন্দেহজনক বাক্য গঠন বা সাধারণ ফিশিং টেমপ্লেটের সাথে মিল পাওয়া গেছে।", impact: impact});
            }
            const commonMisspellings = ["acount", "pasword", "verifcation", "securety", "bkashh", "nogodd", "আপ্নার", "একাউন্ঠ"];
            commonMisspellings.forEach(misspell => {
                if (lowerText.includes(misspell)) {
                    const impact = 7; score += impact;
                    findings["টেক্সট ও প্রাসঙ্গিক বিশ্লেষণ (NLP)"].push({text: `সন্দেহজনক বানান ("${misspell}") পাওয়া গেছে, যা প্রায়শই ফিশিং এ দেখা যায়।`, impact: impact});
                    detectedTechniques.add("খারাপ ব্যাকরণ বা বানান");
                    return; 
                }
            });
        }

        const urls = lowerText ? [...new Set(lowerText.match(/https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&//=]*)/gi) || [])] : [];
        const whitelistedExact = ['google.com', 'facebook.com', 'youtube.com', 'wikipedia.org', 'bdnews24.com', 'prothomalo.com', 'thedailystar.net', 'bbc.com', 'cnn.com', 'microsoft.com', 'apple.com', 'amazon.com', 'linkedin.com', 'twitter.com', 'instagram.com'];
        const whitelistedSuffixes = ['.gov.bd', '.edu.bd', '.mil.bd', '.gov.in', '.ac.uk', '.gov.us', '.gov.au', '.gov.ca', '.org.bd', '.gov', '.edu', '.mil']; 
        const blacklistedKeywordsInUrl = ['login-secure-now', 'verify-your-account-details', 'update-payment-info', 'free-money-claim', 'gift-card-winner', 'g00gle-support', 'faceb0ok-security', 'paypa1-resolve', 'bkaash-verify', 'nogod-update', 'support-center-live', 'weblogin-official', 'account-recovery-portal', 'appleid-confirm', 'microsoftonline-auth', 'securepaymentgateway', 'userauthentication', 'confirm-identity', 'reset-password-now'];
        const commonTypos = {'facebook.com': ['faceb0ok.com', 'facbook.com', 'faacebook.com', 'fb-login.com', 'faceboook.com', 'facebok.com'], 'google.com': ['gogle.com', 'googel.com', 'g00gle.info', 'gooogle.com', 'go<y_bin_235>gle.com'], 'paypal.com': ['payapl.com', 'paypa1.net', 'paypel.com'], 'microsoft.com': ['micr0soft.com', 'mircosoft.org', 'live-support.net', 'micosoft.com'], 'apple.com': ['appie.com', 'appleid-verify.com', 'aple.com'], 'bkash.com': ['bkaash.net', 'bkash-login.org', 'bkash.xyz', 'b-kash.info', 'bikash.com'], 'nagad.com.bd': ['nagad-verify.xyz', 'nogod.info', 'nagad-bd.net', 'nagadd.com']};
        const suspiciousTlds = ['.xyz', '.club', '.top', '.loan', '.work', '.click', '.biz', '.info', '.online', '.live', '.icu', '.gq', '.cf', '.tk', '.ml', '.buzz', '.link', '.site', '.website', '.pw', '.ws', '.cc', '.men', '.win', '.bid', '.ooo', '.stream', '.date', '.monster', '.fun', '.shop'];
        
        if (urls.length > 0) { 
            findings["URL ও ডোমেইন যাচাইকরণ"].push({text: `মোট ${urls.length} টি URL পাওয়া গেছে। (${urls.length > 2 ? 'প্রথম ২টি বিস্তারিত দেখানো হচ্ছে' : ''})`, impact: 0});
            let onlineCheckPerformedCount = 0;

            urls.slice(0, 2).forEach(url_str => { 
                let urlScoreContribution = 0;
                const u_lower = url_str.toLowerCase(); 
                let isWhitelisted = false;
                let currentUrlFindingsObjects = []; 
                let urlDisplay = url_str.length > 50 ? url_str.substring(0,47) + "..." : url_str;

                try {
                    const parsedUrl = new URL(url_str); 
                    const hostname = parsedUrl.hostname.replace(/^www\./, ''); 
                    const path = parsedUrl.pathname;
                    const tld = hostname.substring(hostname.lastIndexOf('.'));

                    if (whitelistedExact.includes(hostname) || whitelistedSuffixes.some(suffix => hostname.endsWith(suffix))) {
                        currentUrlFindingsObjects.push({text: `"${hostname}" একটি পরিচিত নিরাপদ ডোমেইন (হোয়াইটলিস্টেড)।`, impact: -15}); 
                        isWhitelisted = true;
                    } else {
                        let impact = 0;
                        if (blacklistedKeywordsInUrl.some(k => u_lower.includes(k))) { impact = 40; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `URL এ ব্ল্যাকলিস্টেড কীওয়ার্ড/প্যাটার্ন ("${blacklistedKeywordsInUrl.find(k => u_lower.includes(k))}") রয়েছে।`, impact: impact}); }
                        for (const original in commonTypos) {
                            if (commonTypos[original].some(typo => hostname.includes(typo))) {
                                impact = 35; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `"${hostname}" এ "${original}" এর সম্ভাব্য টাইপোস্কোয়াটিং সনাক্ত হয়েছে।`, impact: impact});
                                detectedTechniques.add("ডোমেইন নামের প্রতারণা (Typosquatting)"); break;
                            }
                        }
                        if (suspiciousTlds.includes(tld)) { impact = 25; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `URL টি একটি সন্দেহজনক টপ-লেভেল ডোমেইন (${tld}) ব্যবহার করছে।`, impact: impact}); }
                        if (parsedUrl.protocol === "http:") { impact = 30; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `URL টি inseguro প্রোটোকল (HTTP) ব্যবহার করছে।`, impact: impact}); }
                        if (hostname.match(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/)) { impact = 45; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `URL টি সরাসরি IP Address (${hostname}) ব্যবহার করছে।`, impact: impact}); detectedTechniques.add("সরাসরি আইপি অ্যাড্রেস ব্যবহার");}
                        if (url_str.length > 120) { impact = 15; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `URL (${url_str.length} অক্ষর) অস্বাভাবিক দীর্ঘ।`, impact: impact}); }
                        if ((hostname.match(/-/g) || []).length > 3) { impact = 20; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `ডোমেইন "${hostname}" এ একাধিক (৩+) হাইফেন (-) রয়েছে।`, impact: impact}); }
                        if (path.length > 80 && (path.includes('%') || path.includes('@') || path.includes('..'))) { 
                            impact = 18; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `URL পাথ (${path.length} অক্ষর) দীর্ঘ এবং সন্দেহজনক অক্ষর (%, @, ..) রয়েছে।`, impact: impact});
                            if(path.includes('..')) detectedTechniques.add("পাথ ট্রাভার্সাল প্রচেষ্টা");
                        }
                        
                        const brandNames = ["google", "facebook", "microsoft", "apple", "amazon", "paypal", "bkash", "nagad", "bracbank", "citybank", "standardchartered", "daraz", "pathao", "uber", "linkedin", "twitter", "instagram", "netflix", "spotify"];
                        brandNames.forEach(brand => {
                            if ((hostname.includes(brand) && !hostname.endsWith(`.${brand}.com`) && !hostname.endsWith(`.${brand}.com.bd`) && !hostname.startsWith(`${brand}.`)) || 
                                (path.includes(`/${brand}-login`) || path.includes(`/${brand}/secure`) || path.includes(`/${brand}_support`) || hostname.includes(`${brand}-support`))) {
                                 if(!isWhitelisted && !(hostname.startsWith(brand + '.') && (whitelistedExact.includes(hostname) || whitelistedSuffixes.some(sfx => hostname.endsWith(sfx)))) ){
                                    impact = 30; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `URL এ "${brand}" নামটি সন্দেহজনকভাবে ব্যবহৃত হয়েছে।`, impact: impact});
                                    detectedTechniques.add("ব্র্যান্ডের নামের অপব্যবহার");
                                 }
                            }
                        });

                        if (!isWhitelisted && onlineCheckPerformedCount < 1 && Math.random() < 0.75) {
                            onlineCheckPerformedCount++;
                            const isPhishTankHit = Math.random() < 0.4; 
                            if (isPhishTankHit) {
                                impact = 65; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `URL টি PhishTank দ্বারা পরিচিত ফিশিং সাইট হিসেবে চিহ্নিত (সিমুলেটেড অনলাইন)।`, impact: impact});
                            } else {
                                currentUrlFindingsObjects.push({text: `URL টি PhishTank ডাটাবেসে পাওয়া যায়নি (সিমুলেটেড অনলাইন)।`, impact: 0});
                            }
                        }
                         if (!isWhitelisted && Math.random() < 0.6) {
                            const ageIsNew = Math.random() < 0.65; 
                            if (ageIsNew) {
                                impact = 20; urlScoreContribution += impact; currentUrlFindingsObjects.push({text: `ডোমেইনটি সাম্প্রতিককালে তৈরি করা হয়েছে অথবা এর পরিচিতি কম (সিমুলেটেড)।`, impact: impact});
                            } else {
                                currentUrlFindingsObjects.push({text: `ডোমেইনের বয়স এবং পরিচিতি স্বাভাবিক বলে মনে হচ্ছে (সিমুলেটেড)।`, impact: -5}); 
                            }
                        }
                    }
                } catch (e) { 
                    let impact = 5; urlScoreContribution += impact;
                    currentUrlFindingsObjects.push({text: `URL "${urlDisplay}" টি পার্স করতে সমস্যা হয়েছে।`, impact: impact});
                }
                
                if (currentUrlFindingsObjects.length > 0) {
                    findings["URL ও ডোমেইন যাচাইকরণ"].push({text: `URL "${urlDisplay}":`, impact: 0}); 
                    currentUrlFindingsObjects.forEach(f => findings["URL ও ডোমেইন যাচাইকরণ"].push(f)); 
                }
                score += urlScoreContribution;
            });
        }

        if (inputType === 'text' && lowerText && (lowerText.includes("from:") || lowerText.includes("subject:") || lowerText.includes("received:"))) {
            const fromMatch = text.match(/^(?:from|প্রেরক):\s*.*<([^>]+)>/im) || text.match(/^(?:from|প্রেরক):\s*([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/im);
            const replyToMatch = text.match(/^(?:reply-to|উত্তর দিন):\s*.*<([^>]+)>/im) || text.match(/^(?:reply-to|উত্তর দিন):\s*([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/im);
            const subjectMatch = text.match(/^(?:subject|বিষয়):\s*(.*)/im);
            const receivedHeaderMatch = text.match(/^received:\s*from\s*([\w.-]+)\s*/im);

            if (fromMatch && subjectMatch) { 
                const fromAddress = (fromMatch[1] || fromMatch[2]).trim();
                let fromDomain = "";
                try { fromDomain = new URL("http://" + fromAddress.split('@')[1]).hostname.replace(/^www\./, ''); } catch(e){}

                if (replyToMatch) {
                    const replyToAddress = (replyToMatch[1] || replyToMatch[2]).trim();
                    if (fromAddress.toLowerCase() !== replyToAddress.toLowerCase()) {
                        const impact = 25; score += impact;
                        findings["ইমেইল হেডার বিশ্লেষণ (যদি প্রযোজ্য)"].push({text: `প্রেরকের ঠিকানা (${fromAddress}) এবং Reply-To ঠিকানা (${replyToAddress}) ভিন্ন। এটি একটি প্রতারণার কৌশল হতে পারে।`, impact: impact});
                        detectedTechniques.add("ইমেইল প্রেরকের ঠিকানা পরিবর্তন (Reply-To Mismatch)");
                    }
                }
                if (fromDomain && (blacklistedKeywordsInUrl.some(k => fromDomain.includes(k)) || suspiciousTlds.some(tld => fromDomain.endsWith(tld)) || Object.values(commonTypos).flat().some(typo => fromDomain.includes(typo)) )) {
                     const impact = 30; score += impact;
                     findings["ইমেইল হেডার বিশ্লেষণ (যদি প্রযোজ্য)"].push({text: `প্রেরকের ডোমেইন (${fromDomain}) অত্যন্ত সন্দেহজনক।`, impact: impact});
                } else if (fromDomain && !whitelistedExact.includes(fromDomain) && !whitelistedSuffixes.some(s => fromDomain.endsWith(s)) && Math.random() < 0.25) { 
                     const impact = 18; score += impact;
                     findings["ইমেইল হেডার বিশ্লেষণ (যদি প্রযোজ্য)"].push({text: `প্রেরকের ডোমেইন (${fromDomain}) অপরিচিত এবং যাচাই করা প্রয়োজন।`, impact: impact});
                }
                if (receivedHeaderMatch) {
                    const receivedDomain = receivedHeaderMatch[1].toLowerCase();
                    if (fromDomain && !receivedDomain.includes(fromDomain.split('.').slice(-2).join('.'))) { 
                        const impact = 20; score += impact;
                        findings["ইমেইল হেডার বিশ্লেষণ (যদি প্রযোজ্য)"].push({text: `ইমেইলের "Received" হেডার (${receivedDomain}) এবং "From" ডোমেইন (${fromDomain}) এর মধ্যে অসামঞ্জস্য রয়েছে।`, impact: impact});
                        detectedTechniques.add("ইমেইল পাথ অসামঞ্জস্য (Received Header Mismatch)");
                    }
                }

                if (Math.random() < 0.4) { 
                    const failedChecks = ["SPF", "DKIM", "DMARC"].filter(() => Math.random() < 0.5).join('/');
                    if(failedChecks){
                        const impact = 20; score += impact;
                        findings["ইমেইল হেডার বিশ্লেষণ (যদি প্রযোজ্য)"].push({text: `ইমেইলের ${failedChecks} রেকর্ড অনুপস্থিত বা ত্রুটিপূর্ণ (সিমুলেটেড)। এটি প্রেরকের পরিচয় সম্পর্কে সন্দেহ তৈরি করে।`, impact: impact});
                        detectedTechniques.add("ইমেইল প্রমাণীকরণ ব্যর্থতা (SPF/DKIM/DMARC)");
                    }
                } else if (findings["ইমেইল হেডার বিশ্লেষণ (যদি প্রযোজ্য)"].length === 0) { 
                     findings["ইমেইল হেডার বিশ্লেষণ (যদি প্রযোজ্য)"].push({text: `ইমেইলের প্রেরক যাচাইকরণ রেকর্ড (SPF/DKIM) ঠিক আছে বলে মনে হচ্ছে (সিমুলেটেড)।`, impact: 0});
                }
            }
        }

        if (currentFileName && inputType === 'file') { 
            const ext = currentFileName.substring(currentFileName.lastIndexOf('.')).toLowerCase();
            const highlySuspiciousExt = ['.exe', '.vbs', '.js', '.bat', '.cmd', '.scr', '.msi', '.jar', '.pyc', '.dll', '.ps1', '.sh', '.com', '.pif', '.hta', '.lnk'];
            const moderatelySuspiciousExt = ['.docm', '.xlsm', '.pptm', '.iso', '.img', '.zip', '.rar', '.7z', '.ace', '.dmg', '.wsf', '.cpl', '.html', '.htm']; 
            const disguisedExtPatterns = [/\.pdf\.exe$/, /\.docx?\.js$/, /\.jpg\.bat$/, /\.txt\.vbs$/, /\.mp3\.exe$/, /\.png\.scr$/, /\.gif\.exe$/, /\.html\.js$/, /\.xls\.exe$/];
            let fileFindingMade = false;

            if (highlySuspiciousExt.includes(ext)) {
                const impact = 70; score += impact; 
                findings["ফাইল অ্যাটাচমেন্ট স্ক্যান"].push({text: `মারাত্মক ঝুঁকি: ফাইল "${currentFileName}" একটি সরাসরি এক্সিকিউটেবল/স্ক্রিপ্ট (${ext})। এটি খোলা অত্যন্ত বিপজ্জনক। (ClamAV সিমুলেটেড)`, impact: impact});
                detectedTechniques.add("ক্ষতিকর ফাইল অ্যাটাচমেন্ট (এক্সিকিউটেবল/স্ক্রিপ্ট)");
                fileFindingMade = true;
            } else if (moderatelySuspiciousExt.includes(ext)) {
                const impact = 40; score += impact; 
                 findings["ফাইল অ্যাটাচমেন্ট স্ক্যান"].push({text: `সতর্কতা: ফাইল "${currentFileName}" (${ext}) প্রায়শই ম্যালওয়্যার বিতরণের জন্য ব্যবহৃত হয়। বিষয়বস্তু সম্পর্কে নিশ্চিত না হলে খুলবেন না। (ClamAV সিমুলেটেড)`, impact: impact});
                 detectedTechniques.add("সন্দেহজনক ফাইল অ্যাটাচমেন্ট (আর্কাইভ/ম্যাক্রো-সম্বলিত/ডিস্ক ইমেজ)");
                 fileFindingMade = true;
            }
            
            if (!fileFindingMade) {
                disguisedExtPatterns.forEach(pattern => {
                    if (currentFileName.toLowerCase().match(pattern)) {
                        const impact = 80; score += impact; 
                        findings["ফাইল অ্যাটাচমেন্ট স্ক্যান"].push({text: `মারাত্মক ঝুঁকি: ফাইল "${currentFileName}" একটি ছদ্মবেশী ফাইল যা তার আসল প্রকৃতি লুকাচ্ছে। এটি সম্ভবত ম্যালওয়্যার। (ClamAV সিমুলেটেড)`, impact: impact});
                        detectedTechniques.add("ছদ্মবেশী (Disguised) ফাইল অ্যাটাচমেন্ট");
                        fileFindingMade = true;
                    }
                });
            }
            
            if (['.doc', '.docx', '.xls', '.xlsx', '.pdf', '.zip', '.rar'].includes(ext) && Math.random() < 0.3) {
                const impact = 30; score += impact;
                findings["ফাইল অ্যাটাচমেন্ট স্ক্যান"].push({text: `ফাইল "${currentFileName}" সিমুলেটেড স্যান্ডবক্স বিশ্লেষণে সন্দেহজনক আচরণ দেখিয়েছে (যেমন, নেটওয়ার্ক সংযোগ বা সিস্টেম পরিবর্তনের চেষ্টা)।`, impact: impact});
                detectedTechniques.add("স্যান্ডবক্সে সন্দেহজনক আচরণ (সিমুলেটেড)");
                fileFindingMade = true;
            }

            if (!fileFindingMade && (ext === ".txt" || ext === ".eml")) {
                 findings["ফাইল অ্যাটাচমেন্ট স্ক্যান"].push({text: `ফাইল "${currentFileName}" (${ext}) এর টেক্সট কন্টেন্ট বিশ্লেষণ করা হয়েছে (যদি টেক্সট ইনপুটে দেওয়া হয়ে থাকে)।`, impact: 0});
            } else if (!fileFindingMade) {
                 findings["ফাইল অ্যাটাচমেন্ট স্ক্যান"].push({text: `ফাইল "${currentFileName}" (${ext}) এর জন্য কোনো তাৎক্ষণিক এক্সটেনশন-ভিত্তিক উচ্চ ঝুঁকি পাওয়া যায়নি।`, impact: 0});
            }
        }
        
        if (detectedTechniques.size > 0) {
            findings["প্রতারণার কৌশল সনাক্তকরণ"] = Array.from(detectedTechniques).map(tech => ({text: tech, impact: 0}));
        }

        score = Math.min(Math.max(Math.round(score), 0), 100);

        let level = "নিরাপদ"; let emoji = "✅";
        if (score >= 75) { level = "অত্যন্ত ঝুঁকিপূর্ণ"; emoji = "🚨"; }
        else if (score >= 50) { level = "উচ্চ ঝুঁকি"; emoji = "☣️"; }
        else if (score >= 25) { level = "সন্দেহজনক"; emoji = "⚠️"; }
        else if (score >= 10) { level = "কিছুটা সতর্ক থাকুন"; emoji = "🤔"; }
        
        return { score, level, emoji, findings };
    }
    navigateToScreen('selectionScreen');
</script>
</body>
</html>
